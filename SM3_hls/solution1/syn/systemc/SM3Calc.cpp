// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "SM3Calc.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic SM3Calc::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic SM3Calc::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<11> SM3Calc::ap_ST_fsm_state1 = "1";
const sc_lv<11> SM3Calc::ap_ST_fsm_state2 = "10";
const sc_lv<11> SM3Calc::ap_ST_fsm_state3 = "100";
const sc_lv<11> SM3Calc::ap_ST_fsm_state4 = "1000";
const sc_lv<11> SM3Calc::ap_ST_fsm_state5 = "10000";
const sc_lv<11> SM3Calc::ap_ST_fsm_state6 = "100000";
const sc_lv<11> SM3Calc::ap_ST_fsm_state7 = "1000000";
const sc_lv<11> SM3Calc::ap_ST_fsm_state8 = "10000000";
const sc_lv<11> SM3Calc::ap_ST_fsm_state9 = "100000000";
const sc_lv<11> SM3Calc::ap_ST_fsm_state10 = "1000000000";
const sc_lv<11> SM3Calc::ap_ST_fsm_state11 = "10000000000";
const sc_lv<32> SM3Calc::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> SM3Calc::ap_const_lv32_1 = "1";
const sc_lv<1> SM3Calc::ap_const_lv1_0 = "0";
const sc_lv<1> SM3Calc::ap_const_lv1_1 = "1";
const sc_lv<32> SM3Calc::ap_const_lv32_2 = "10";
const sc_lv<32> SM3Calc::ap_const_lv32_3 = "11";
const sc_lv<32> SM3Calc::ap_const_lv32_9 = "1001";
const sc_lv<512> SM3Calc::ap_const_lv512_lc_1 = "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<6> SM3Calc::ap_const_lv6_0 = "000000";
const sc_lv<5> SM3Calc::ap_const_lv5_0 = "00000";
const sc_lv<4> SM3Calc::ap_const_lv4_0 = "0000";
const sc_lv<32> SM3Calc::ap_const_lv32_8 = "1000";
const sc_lv<32> SM3Calc::ap_const_lv32_A = "1010";
const sc_lv<32> SM3Calc::ap_const_lv32_7 = "111";
const sc_lv<64> SM3Calc::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<64> SM3Calc::ap_const_lv64_1 = "1";
const sc_lv<64> SM3Calc::ap_const_lv64_2 = "10";
const sc_lv<32> SM3Calc::ap_const_lv32_4 = "100";
const sc_lv<64> SM3Calc::ap_const_lv64_3 = "11";
const sc_lv<64> SM3Calc::ap_const_lv64_4 = "100";
const sc_lv<32> SM3Calc::ap_const_lv32_5 = "101";
const sc_lv<64> SM3Calc::ap_const_lv64_5 = "101";
const sc_lv<64> SM3Calc::ap_const_lv64_6 = "110";
const sc_lv<32> SM3Calc::ap_const_lv32_6 = "110";
const sc_lv<64> SM3Calc::ap_const_lv64_7 = "111";
const sc_lv<32> SM3Calc::ap_const_lv32_7380166F = "1110011100000000001011001101111";
const sc_lv<32> SM3Calc::ap_const_lv32_4914B2B9 = "1001001000101001011001010111001";
const sc_lv<32> SM3Calc::ap_const_lv32_172442D7 = "10111001001000100001011010111";
const sc_lv<32> SM3Calc::ap_const_lv32_DA8A0600 = "11011010100010100000011000000000";
const sc_lv<32> SM3Calc::ap_const_lv32_A96F30BC = "10101001011011110011000010111100";
const sc_lv<32> SM3Calc::ap_const_lv32_163138AA = "10110001100010011100010101010";
const sc_lv<32> SM3Calc::ap_const_lv32_E38DEE4D = "11100011100011011110111001001101";
const sc_lv<32> SM3Calc::ap_const_lv32_B0FB0E4E = "10110000111110110000111001001110";
const sc_lv<6> SM3Calc::ap_const_lv6_20 = "100000";
const sc_lv<6> SM3Calc::ap_const_lv6_1 = "1";
const sc_lv<10> SM3Calc::ap_const_lv10_200 = "1000000000";
const sc_lv<9> SM3Calc::ap_const_lv9_1FF = "111111111";
const sc_lv<3> SM3Calc::ap_const_lv3_0 = "000";
const sc_lv<8> SM3Calc::ap_const_lv8_7 = "111";
const sc_lv<10> SM3Calc::ap_const_lv10_1FF = "111111111";
const sc_lv<32> SM3Calc::ap_const_lv32_1FF = "111111111";
const sc_lv<512> SM3Calc::ap_const_lv512_lc_2 = "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111";
const sc_lv<5> SM3Calc::ap_const_lv5_10 = "10000";
const sc_lv<5> SM3Calc::ap_const_lv5_1 = "1";
const sc_lv<9> SM3Calc::ap_const_lv9_1F = "11111";
const sc_lv<4> SM3Calc::ap_const_lv4_8 = "1000";
const sc_lv<4> SM3Calc::ap_const_lv4_1 = "1";
const sc_lv<3> SM3Calc::ap_const_lv3_7 = "111";
const bool SM3Calc::ap_const_boolean_1 = true;

SM3Calc::SM3Calc(sc_module_name name) : sc_module(name), mVcdFile(0) {
    messageBlock_U = new SM3Calc_messageBldEe("messageBlock_U");
    messageBlock_U->clk(ap_clk);
    messageBlock_U->reset(ap_rst);
    messageBlock_U->address0(messageBlock_address0);
    messageBlock_U->ce0(messageBlock_ce0);
    messageBlock_U->we0(messageBlock_we0);
    messageBlock_U->d0(messageBlock_d0);
    messageBlock_U->q0(messageBlock_q0);
    intermediateHash_U = new SM3Calc_intermedieOg("intermediateHash_U");
    intermediateHash_U->clk(ap_clk);
    intermediateHash_U->reset(ap_rst);
    intermediateHash_U->address0(intermediateHash_address0);
    intermediateHash_U->ce0(intermediateHash_ce0);
    intermediateHash_U->we0(intermediateHash_we0);
    intermediateHash_U->d0(intermediateHash_d0);
    intermediateHash_U->q0(intermediateHash_q0);
    intermediateHash_U->address1(intermediateHash_address1);
    intermediateHash_U->ce1(intermediateHash_ce1);
    intermediateHash_U->we1(intermediateHash_we1);
    intermediateHash_U->d1(intermediateHash_d1);
    intermediateHash_U->q1(intermediateHash_q1);
    grp_processmessageblock_fu_297 = new processmessageblock("grp_processmessageblock_fu_297");
    grp_processmessageblock_fu_297->ap_clk(ap_clk);
    grp_processmessageblock_fu_297->ap_rst(ap_rst);
    grp_processmessageblock_fu_297->ap_start(grp_processmessageblock_fu_297_ap_start);
    grp_processmessageblock_fu_297->ap_done(grp_processmessageblock_fu_297_ap_done);
    grp_processmessageblock_fu_297->ap_idle(grp_processmessageblock_fu_297_ap_idle);
    grp_processmessageblock_fu_297->ap_ready(grp_processmessageblock_fu_297_ap_ready);
    grp_processmessageblock_fu_297->intermediateHash_address0(grp_processmessageblock_fu_297_intermediateHash_address0);
    grp_processmessageblock_fu_297->intermediateHash_ce0(grp_processmessageblock_fu_297_intermediateHash_ce0);
    grp_processmessageblock_fu_297->intermediateHash_we0(grp_processmessageblock_fu_297_intermediateHash_we0);
    grp_processmessageblock_fu_297->intermediateHash_d0(grp_processmessageblock_fu_297_intermediateHash_d0);
    grp_processmessageblock_fu_297->intermediateHash_q0(intermediateHash_q0);
    grp_processmessageblock_fu_297->intermediateHash_address1(grp_processmessageblock_fu_297_intermediateHash_address1);
    grp_processmessageblock_fu_297->intermediateHash_ce1(grp_processmessageblock_fu_297_intermediateHash_ce1);
    grp_processmessageblock_fu_297->intermediateHash_we1(grp_processmessageblock_fu_297_intermediateHash_we1);
    grp_processmessageblock_fu_297->intermediateHash_d1(grp_processmessageblock_fu_297_intermediateHash_d1);
    grp_processmessageblock_fu_297->intermediateHash_q1(intermediateHash_q1);
    grp_processmessageblock_fu_297->messageBlock_address0(grp_processmessageblock_fu_297_messageBlock_address0);
    grp_processmessageblock_fu_297->messageBlock_ce0(grp_processmessageblock_fu_297_messageBlock_ce0);
    grp_processmessageblock_fu_297->messageBlock_q0(messageBlock_q0);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_and_ln212_1_fu_504_p2);
    sensitive << ( p_Val2_2_reg_251 );
    sensitive << ( xor_ln212_2_fu_498_p2 );

    SC_METHOD(thread_and_ln212_2_fu_510_p2);
    sensitive << ( and_ln212_fu_492_p2 );
    sensitive << ( select_ln212_3_fu_472_p3 );

    SC_METHOD(thread_and_ln212_fu_492_p2);
    sensitive << ( shl_ln212_1_fu_480_p2 );
    sensitive << ( lshr_ln212_fu_486_p2 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( icmp_ln236_fu_658_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( icmp_ln236_fu_658_p2 );

    SC_METHOD(thread_digest_address0);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( zext_ln238_1_fu_685_p1 );

    SC_METHOD(thread_digest_ce0);
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_digest_d0);
    sensitive << ( intermediateHash_q0 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_digest_we0);
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_grp_processmessageblock_fu_297_ap_start);
    sensitive << ( grp_processmessageblock_fu_297_ap_start_reg );

    SC_METHOD(thread_i_6_fu_528_p2);
    sensitive << ( i_1_reg_274 );

    SC_METHOD(thread_i_7_fu_664_p2);
    sensitive << ( i_3_reg_285 );

    SC_METHOD(thread_i_fu_309_p2);
    sensitive << ( i_0_reg_263 );

    SC_METHOD(thread_icmp_ln210_fu_303_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_0_reg_263 );

    SC_METHOD(thread_icmp_ln212_fu_390_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( shl_ln_fu_377_p3 );
    sensitive << ( or_ln212_fu_384_p2 );

    SC_METHOD(thread_icmp_ln222_fu_522_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( i_1_reg_274 );

    SC_METHOD(thread_icmp_ln224_fu_552_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln222_fu_522_p2 );
    sensitive << ( shl_ln1_fu_538_p3 );
    sensitive << ( or_ln224_fu_546_p2 );

    SC_METHOD(thread_icmp_ln236_fu_658_p2);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( i_3_reg_285 );

    SC_METHOD(thread_intermediateHash_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( grp_processmessageblock_fu_297_intermediateHash_address0 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( zext_ln238_fu_680_p1 );

    SC_METHOD(thread_intermediateHash_address1);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( grp_processmessageblock_fu_297_intermediateHash_address1 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_intermediateHash_ce0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( grp_processmessageblock_fu_297_intermediateHash_ce0 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_intermediateHash_ce1);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( grp_processmessageblock_fu_297_intermediateHash_ce1 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_intermediateHash_d0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( grp_processmessageblock_fu_297_intermediateHash_d0 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_intermediateHash_d1);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( grp_processmessageblock_fu_297_intermediateHash_d1 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_intermediateHash_we0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( grp_processmessageblock_fu_297_intermediateHash_we0 );
    sensitive << ( icmp_ln222_fu_522_p2 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_intermediateHash_we1);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( grp_processmessageblock_fu_297_intermediateHash_we1 );
    sensitive << ( icmp_ln222_fu_522_p2 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_lshr_ln212_fu_486_p2);
    sensitive << ( zext_ln212_6_fu_452_p1 );

    SC_METHOD(thread_lshr_ln224_1_fu_636_p2);
    sensitive << ( zext_ln224_4_fu_626_p1 );

    SC_METHOD(thread_lshr_ln224_fu_630_p2);
    sensitive << ( select_ln224_1_fu_601_p3 );
    sensitive << ( zext_ln224_3_fu_622_p1 );

    SC_METHOD(thread_messageBlock_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( grp_processmessageblock_fu_297_messageBlock_address0 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( zext_ln224_1_fu_653_p1 );

    SC_METHOD(thread_messageBlock_ce0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( grp_processmessageblock_fu_297_messageBlock_ce0 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_messageBlock_d0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( p_Result_s_fu_642_p2 );

    SC_METHOD(thread_messageBlock_we0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln222_fu_522_p2 );

    SC_METHOD(thread_message_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( zext_ln212_fu_315_p1 );

    SC_METHOD(thread_message_ce0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_or_ln212_fu_384_p2);
    sensitive << ( shl_ln_fu_377_p3 );

    SC_METHOD(thread_or_ln224_fu_546_p2);
    sensitive << ( shl_ln1_fu_538_p3 );

    SC_METHOD(thread_p_Result_1_fu_516_p2);
    sensitive << ( and_ln212_1_fu_504_p2 );
    sensitive << ( and_ln212_2_fu_510_p2 );

    SC_METHOD(thread_p_Result_2_fu_356_p4);
    sensitive << ( pack_fu_340_p2 );
    sensitive << ( zext_ln218_fu_352_p1 );

    SC_METHOD(thread_p_Result_3_fu_366_p5);
    sensitive << ( messageLen );
    sensitive << ( p_Result_2_fu_356_p4 );

    SC_METHOD(thread_p_Result_s_fu_642_p2);
    sensitive << ( lshr_ln224_fu_630_p2 );
    sensitive << ( lshr_ln224_1_fu_636_p2 );

    SC_METHOD(thread_pack_fu_340_p2);
    sensitive << ( p_Val2_2_reg_251 );
    sensitive << ( zext_ln216_1_fu_336_p1 );

    SC_METHOD(thread_select_ln212_1_fu_422_p3);
    sensitive << ( zext_ln212_1_fu_396_p1 );
    sensitive << ( icmp_ln212_fu_390_p2 );
    sensitive << ( zext_ln212_2_fu_400_p1 );

    SC_METHOD(thread_select_ln212_2_fu_430_p3);
    sensitive << ( zext_ln212_1_fu_396_p1 );
    sensitive << ( icmp_ln212_fu_390_p2 );
    sensitive << ( xor_ln212_fu_408_p2 );

    SC_METHOD(thread_select_ln212_3_fu_472_p3);
    sensitive << ( icmp_ln212_fu_390_p2 );
    sensitive << ( shl_ln212_fu_456_p2 );
    sensitive << ( tmp_fu_462_p4 );

    SC_METHOD(thread_select_ln212_fu_414_p3);
    sensitive << ( zext_ln212_1_fu_396_p1 );
    sensitive << ( icmp_ln212_fu_390_p2 );
    sensitive << ( zext_ln212_2_fu_400_p1 );

    SC_METHOD(thread_select_ln224_1_fu_601_p3);
    sensitive << ( p_Result_3_reg_715 );
    sensitive << ( icmp_ln224_fu_552_p2 );
    sensitive << ( tmp_3_fu_566_p4 );

    SC_METHOD(thread_select_ln224_2_fu_608_p3);
    sensitive << ( zext_ln224_fu_558_p1 );
    sensitive << ( icmp_ln224_fu_552_p2 );
    sensitive << ( xor_ln224_fu_581_p2 );

    SC_METHOD(thread_select_ln224_fu_593_p3);
    sensitive << ( icmp_ln224_fu_552_p2 );
    sensitive << ( sub_ln224_fu_575_p2 );
    sensitive << ( sub_ln224_1_fu_587_p2 );

    SC_METHOD(thread_shl_ln1_fu_538_p3);
    sensitive << ( trunc_ln224_fu_534_p1 );

    SC_METHOD(thread_shl_ln212_1_fu_480_p2);
    sensitive << ( zext_ln212_5_fu_448_p1 );

    SC_METHOD(thread_shl_ln212_fu_456_p2);
    sensitive << ( zext_ln212_3_fu_404_p1 );
    sensitive << ( zext_ln212_4_fu_444_p1 );

    SC_METHOD(thread_shl_ln_fu_377_p3);
    sensitive << ( trunc_ln212_reg_710 );

    SC_METHOD(thread_sub_ln216_fu_330_p2);
    sensitive << ( zext_ln216_2_fu_327_p1 );

    SC_METHOD(thread_sub_ln224_1_fu_587_p2);
    sensitive << ( zext_ln224_fu_558_p1 );
    sensitive << ( zext_ln224_2_fu_562_p1 );

    SC_METHOD(thread_sub_ln224_2_fu_616_p2);
    sensitive << ( select_ln224_fu_593_p3 );

    SC_METHOD(thread_sub_ln224_fu_575_p2);
    sensitive << ( zext_ln224_fu_558_p1 );
    sensitive << ( zext_ln224_2_fu_562_p1 );

    SC_METHOD(thread_tmp_3_fu_566_p4);
    sensitive << ( p_Result_3_reg_715 );

    SC_METHOD(thread_tmp_fu_462_p4);
    sensitive << ( shl_ln212_fu_456_p2 );

    SC_METHOD(thread_trunc_ln212_fu_320_p1);
    sensitive << ( i_0_reg_263 );

    SC_METHOD(thread_trunc_ln224_fu_534_p1);
    sensitive << ( i_1_reg_274 );

    SC_METHOD(thread_trunc_ln238_fu_670_p1);
    sensitive << ( i_3_reg_285 );

    SC_METHOD(thread_xor_ln212_1_fu_438_p2);
    sensitive << ( select_ln212_fu_414_p3 );

    SC_METHOD(thread_xor_ln212_2_fu_498_p2);
    sensitive << ( and_ln212_fu_492_p2 );

    SC_METHOD(thread_xor_ln212_fu_408_p2);
    sensitive << ( zext_ln212_1_fu_396_p1 );

    SC_METHOD(thread_xor_ln218_fu_346_p2);
    sensitive << ( zext_ln216_fu_324_p1 );

    SC_METHOD(thread_xor_ln224_fu_581_p2);
    sensitive << ( zext_ln224_fu_558_p1 );

    SC_METHOD(thread_xor_ln238_fu_674_p2);
    sensitive << ( trunc_ln238_fu_670_p1 );

    SC_METHOD(thread_zext_ln212_1_fu_396_p1);
    sensitive << ( shl_ln_fu_377_p3 );

    SC_METHOD(thread_zext_ln212_2_fu_400_p1);
    sensitive << ( or_ln212_fu_384_p2 );

    SC_METHOD(thread_zext_ln212_3_fu_404_p1);
    sensitive << ( message_q0 );

    SC_METHOD(thread_zext_ln212_4_fu_444_p1);
    sensitive << ( select_ln212_2_fu_430_p3 );

    SC_METHOD(thread_zext_ln212_5_fu_448_p1);
    sensitive << ( select_ln212_1_fu_422_p3 );

    SC_METHOD(thread_zext_ln212_6_fu_452_p1);
    sensitive << ( xor_ln212_1_fu_438_p2 );

    SC_METHOD(thread_zext_ln212_fu_315_p1);
    sensitive << ( i_0_reg_263 );

    SC_METHOD(thread_zext_ln216_1_fu_336_p1);
    sensitive << ( sub_ln216_fu_330_p2 );

    SC_METHOD(thread_zext_ln216_2_fu_327_p1);
    sensitive << ( messageLen );

    SC_METHOD(thread_zext_ln216_fu_324_p1);
    sensitive << ( messageLen );

    SC_METHOD(thread_zext_ln218_fu_352_p1);
    sensitive << ( xor_ln218_fu_346_p2 );

    SC_METHOD(thread_zext_ln224_1_fu_653_p1);
    sensitive << ( i_1_reg_274 );

    SC_METHOD(thread_zext_ln224_2_fu_562_p1);
    sensitive << ( or_ln224_fu_546_p2 );

    SC_METHOD(thread_zext_ln224_3_fu_622_p1);
    sensitive << ( select_ln224_2_fu_608_p3 );

    SC_METHOD(thread_zext_ln224_4_fu_626_p1);
    sensitive << ( sub_ln224_2_fu_616_p2 );

    SC_METHOD(thread_zext_ln224_fu_558_p1);
    sensitive << ( shl_ln1_fu_538_p3 );

    SC_METHOD(thread_zext_ln238_1_fu_685_p1);
    sensitive << ( i_3_reg_285 );

    SC_METHOD(thread_zext_ln238_fu_680_p1);
    sensitive << ( xor_ln238_fu_674_p2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln210_fu_303_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( icmp_ln236_fu_658_p2 );
    sensitive << ( grp_processmessageblock_fu_297_ap_done );
    sensitive << ( icmp_ln222_fu_522_p2 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "00000000001";
    grp_processmessageblock_fu_297_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "SM3Calc_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, message_address0, "(port)message_address0");
    sc_trace(mVcdFile, message_ce0, "(port)message_ce0");
    sc_trace(mVcdFile, message_q0, "(port)message_q0");
    sc_trace(mVcdFile, messageLen, "(port)messageLen");
    sc_trace(mVcdFile, digest_address0, "(port)digest_address0");
    sc_trace(mVcdFile, digest_ce0, "(port)digest_ce0");
    sc_trace(mVcdFile, digest_we0, "(port)digest_we0");
    sc_trace(mVcdFile, digest_d0, "(port)digest_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, i_fu_309_p2, "i_fu_309_p2");
    sc_trace(mVcdFile, i_reg_700, "i_reg_700");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, icmp_ln210_fu_303_p2, "icmp_ln210_fu_303_p2");
    sc_trace(mVcdFile, trunc_ln212_fu_320_p1, "trunc_ln212_fu_320_p1");
    sc_trace(mVcdFile, trunc_ln212_reg_710, "trunc_ln212_reg_710");
    sc_trace(mVcdFile, p_Result_3_fu_366_p5, "p_Result_3_fu_366_p5");
    sc_trace(mVcdFile, p_Result_3_reg_715, "p_Result_3_reg_715");
    sc_trace(mVcdFile, p_Result_1_fu_516_p2, "p_Result_1_fu_516_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, i_6_fu_528_p2, "i_6_fu_528_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, i_7_fu_664_p2, "i_7_fu_664_p2");
    sc_trace(mVcdFile, i_7_reg_737, "i_7_reg_737");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, icmp_ln236_fu_658_p2, "icmp_ln236_fu_658_p2");
    sc_trace(mVcdFile, messageBlock_address0, "messageBlock_address0");
    sc_trace(mVcdFile, messageBlock_ce0, "messageBlock_ce0");
    sc_trace(mVcdFile, messageBlock_we0, "messageBlock_we0");
    sc_trace(mVcdFile, messageBlock_d0, "messageBlock_d0");
    sc_trace(mVcdFile, messageBlock_q0, "messageBlock_q0");
    sc_trace(mVcdFile, intermediateHash_address0, "intermediateHash_address0");
    sc_trace(mVcdFile, intermediateHash_ce0, "intermediateHash_ce0");
    sc_trace(mVcdFile, intermediateHash_we0, "intermediateHash_we0");
    sc_trace(mVcdFile, intermediateHash_d0, "intermediateHash_d0");
    sc_trace(mVcdFile, intermediateHash_q0, "intermediateHash_q0");
    sc_trace(mVcdFile, intermediateHash_address1, "intermediateHash_address1");
    sc_trace(mVcdFile, intermediateHash_ce1, "intermediateHash_ce1");
    sc_trace(mVcdFile, intermediateHash_we1, "intermediateHash_we1");
    sc_trace(mVcdFile, intermediateHash_d1, "intermediateHash_d1");
    sc_trace(mVcdFile, intermediateHash_q1, "intermediateHash_q1");
    sc_trace(mVcdFile, grp_processmessageblock_fu_297_ap_start, "grp_processmessageblock_fu_297_ap_start");
    sc_trace(mVcdFile, grp_processmessageblock_fu_297_ap_done, "grp_processmessageblock_fu_297_ap_done");
    sc_trace(mVcdFile, grp_processmessageblock_fu_297_ap_idle, "grp_processmessageblock_fu_297_ap_idle");
    sc_trace(mVcdFile, grp_processmessageblock_fu_297_ap_ready, "grp_processmessageblock_fu_297_ap_ready");
    sc_trace(mVcdFile, grp_processmessageblock_fu_297_intermediateHash_address0, "grp_processmessageblock_fu_297_intermediateHash_address0");
    sc_trace(mVcdFile, grp_processmessageblock_fu_297_intermediateHash_ce0, "grp_processmessageblock_fu_297_intermediateHash_ce0");
    sc_trace(mVcdFile, grp_processmessageblock_fu_297_intermediateHash_we0, "grp_processmessageblock_fu_297_intermediateHash_we0");
    sc_trace(mVcdFile, grp_processmessageblock_fu_297_intermediateHash_d0, "grp_processmessageblock_fu_297_intermediateHash_d0");
    sc_trace(mVcdFile, grp_processmessageblock_fu_297_intermediateHash_address1, "grp_processmessageblock_fu_297_intermediateHash_address1");
    sc_trace(mVcdFile, grp_processmessageblock_fu_297_intermediateHash_ce1, "grp_processmessageblock_fu_297_intermediateHash_ce1");
    sc_trace(mVcdFile, grp_processmessageblock_fu_297_intermediateHash_we1, "grp_processmessageblock_fu_297_intermediateHash_we1");
    sc_trace(mVcdFile, grp_processmessageblock_fu_297_intermediateHash_d1, "grp_processmessageblock_fu_297_intermediateHash_d1");
    sc_trace(mVcdFile, grp_processmessageblock_fu_297_messageBlock_address0, "grp_processmessageblock_fu_297_messageBlock_address0");
    sc_trace(mVcdFile, grp_processmessageblock_fu_297_messageBlock_ce0, "grp_processmessageblock_fu_297_messageBlock_ce0");
    sc_trace(mVcdFile, p_Val2_2_reg_251, "p_Val2_2_reg_251");
    sc_trace(mVcdFile, i_0_reg_263, "i_0_reg_263");
    sc_trace(mVcdFile, i_1_reg_274, "i_1_reg_274");
    sc_trace(mVcdFile, icmp_ln222_fu_522_p2, "icmp_ln222_fu_522_p2");
    sc_trace(mVcdFile, i_3_reg_285, "i_3_reg_285");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, grp_processmessageblock_fu_297_ap_start_reg, "grp_processmessageblock_fu_297_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, zext_ln212_fu_315_p1, "zext_ln212_fu_315_p1");
    sc_trace(mVcdFile, zext_ln224_1_fu_653_p1, "zext_ln224_1_fu_653_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, zext_ln238_fu_680_p1, "zext_ln238_fu_680_p1");
    sc_trace(mVcdFile, zext_ln238_1_fu_685_p1, "zext_ln238_1_fu_685_p1");
    sc_trace(mVcdFile, zext_ln216_2_fu_327_p1, "zext_ln216_2_fu_327_p1");
    sc_trace(mVcdFile, sub_ln216_fu_330_p2, "sub_ln216_fu_330_p2");
    sc_trace(mVcdFile, zext_ln216_1_fu_336_p1, "zext_ln216_1_fu_336_p1");
    sc_trace(mVcdFile, zext_ln216_fu_324_p1, "zext_ln216_fu_324_p1");
    sc_trace(mVcdFile, xor_ln218_fu_346_p2, "xor_ln218_fu_346_p2");
    sc_trace(mVcdFile, pack_fu_340_p2, "pack_fu_340_p2");
    sc_trace(mVcdFile, zext_ln218_fu_352_p1, "zext_ln218_fu_352_p1");
    sc_trace(mVcdFile, p_Result_2_fu_356_p4, "p_Result_2_fu_356_p4");
    sc_trace(mVcdFile, shl_ln_fu_377_p3, "shl_ln_fu_377_p3");
    sc_trace(mVcdFile, or_ln212_fu_384_p2, "or_ln212_fu_384_p2");
    sc_trace(mVcdFile, zext_ln212_1_fu_396_p1, "zext_ln212_1_fu_396_p1");
    sc_trace(mVcdFile, icmp_ln212_fu_390_p2, "icmp_ln212_fu_390_p2");
    sc_trace(mVcdFile, zext_ln212_2_fu_400_p1, "zext_ln212_2_fu_400_p1");
    sc_trace(mVcdFile, xor_ln212_fu_408_p2, "xor_ln212_fu_408_p2");
    sc_trace(mVcdFile, select_ln212_fu_414_p3, "select_ln212_fu_414_p3");
    sc_trace(mVcdFile, select_ln212_2_fu_430_p3, "select_ln212_2_fu_430_p3");
    sc_trace(mVcdFile, select_ln212_1_fu_422_p3, "select_ln212_1_fu_422_p3");
    sc_trace(mVcdFile, xor_ln212_1_fu_438_p2, "xor_ln212_1_fu_438_p2");
    sc_trace(mVcdFile, zext_ln212_3_fu_404_p1, "zext_ln212_3_fu_404_p1");
    sc_trace(mVcdFile, zext_ln212_4_fu_444_p1, "zext_ln212_4_fu_444_p1");
    sc_trace(mVcdFile, shl_ln212_fu_456_p2, "shl_ln212_fu_456_p2");
    sc_trace(mVcdFile, tmp_fu_462_p4, "tmp_fu_462_p4");
    sc_trace(mVcdFile, zext_ln212_5_fu_448_p1, "zext_ln212_5_fu_448_p1");
    sc_trace(mVcdFile, zext_ln212_6_fu_452_p1, "zext_ln212_6_fu_452_p1");
    sc_trace(mVcdFile, shl_ln212_1_fu_480_p2, "shl_ln212_1_fu_480_p2");
    sc_trace(mVcdFile, lshr_ln212_fu_486_p2, "lshr_ln212_fu_486_p2");
    sc_trace(mVcdFile, and_ln212_fu_492_p2, "and_ln212_fu_492_p2");
    sc_trace(mVcdFile, xor_ln212_2_fu_498_p2, "xor_ln212_2_fu_498_p2");
    sc_trace(mVcdFile, select_ln212_3_fu_472_p3, "select_ln212_3_fu_472_p3");
    sc_trace(mVcdFile, and_ln212_1_fu_504_p2, "and_ln212_1_fu_504_p2");
    sc_trace(mVcdFile, and_ln212_2_fu_510_p2, "and_ln212_2_fu_510_p2");
    sc_trace(mVcdFile, trunc_ln224_fu_534_p1, "trunc_ln224_fu_534_p1");
    sc_trace(mVcdFile, shl_ln1_fu_538_p3, "shl_ln1_fu_538_p3");
    sc_trace(mVcdFile, or_ln224_fu_546_p2, "or_ln224_fu_546_p2");
    sc_trace(mVcdFile, zext_ln224_fu_558_p1, "zext_ln224_fu_558_p1");
    sc_trace(mVcdFile, zext_ln224_2_fu_562_p1, "zext_ln224_2_fu_562_p1");
    sc_trace(mVcdFile, icmp_ln224_fu_552_p2, "icmp_ln224_fu_552_p2");
    sc_trace(mVcdFile, sub_ln224_fu_575_p2, "sub_ln224_fu_575_p2");
    sc_trace(mVcdFile, sub_ln224_1_fu_587_p2, "sub_ln224_1_fu_587_p2");
    sc_trace(mVcdFile, tmp_3_fu_566_p4, "tmp_3_fu_566_p4");
    sc_trace(mVcdFile, xor_ln224_fu_581_p2, "xor_ln224_fu_581_p2");
    sc_trace(mVcdFile, select_ln224_fu_593_p3, "select_ln224_fu_593_p3");
    sc_trace(mVcdFile, select_ln224_2_fu_608_p3, "select_ln224_2_fu_608_p3");
    sc_trace(mVcdFile, sub_ln224_2_fu_616_p2, "sub_ln224_2_fu_616_p2");
    sc_trace(mVcdFile, select_ln224_1_fu_601_p3, "select_ln224_1_fu_601_p3");
    sc_trace(mVcdFile, zext_ln224_3_fu_622_p1, "zext_ln224_3_fu_622_p1");
    sc_trace(mVcdFile, zext_ln224_4_fu_626_p1, "zext_ln224_4_fu_626_p1");
    sc_trace(mVcdFile, lshr_ln224_fu_630_p2, "lshr_ln224_fu_630_p2");
    sc_trace(mVcdFile, lshr_ln224_1_fu_636_p2, "lshr_ln224_1_fu_636_p2");
    sc_trace(mVcdFile, p_Result_s_fu_642_p2, "p_Result_s_fu_642_p2");
    sc_trace(mVcdFile, trunc_ln238_fu_670_p1, "trunc_ln238_fu_670_p1");
    sc_trace(mVcdFile, xor_ln238_fu_674_p2, "xor_ln238_fu_674_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("SM3Calc.hdltvin.dat");
    mHdltvoutHandle.open("SM3Calc.hdltvout.dat");
}

SM3Calc::~SM3Calc() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete messageBlock_U;
    delete intermediateHash_U;
    delete grp_processmessageblock_fu_297;
}

void SM3Calc::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_processmessageblock_fu_297_ap_start_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
            grp_processmessageblock_fu_297_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_processmessageblock_fu_297_ap_ready.read())) {
            grp_processmessageblock_fu_297_ap_start_reg = ap_const_logic_0;
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        i_0_reg_263 = i_reg_700.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_0_reg_263 = ap_const_lv6_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln222_fu_522_p2.read()))) {
        i_1_reg_274 = i_6_fu_528_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln210_fu_303_p2.read(), ap_const_lv1_1))) {
        i_1_reg_274 = ap_const_lv5_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        i_3_reg_285 = i_7_reg_737.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
                esl_seteq<1,1,1>(grp_processmessageblock_fu_297_ap_done.read(), ap_const_logic_1))) {
        i_3_reg_285 = ap_const_lv4_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        p_Val2_2_reg_251 = p_Result_1_fu_516_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        p_Val2_2_reg_251 = ap_const_lv512_lc_1;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        i_7_reg_737 = i_7_fu_664_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_reg_700 = i_fu_309_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln210_fu_303_p2.read(), ap_const_lv1_1))) {
        p_Result_3_reg_715 = p_Result_3_fu_366_p5.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln210_fu_303_p2.read(), ap_const_lv1_0))) {
        trunc_ln212_reg_710 = trunc_ln212_fu_320_p1.read();
    }
}

void SM3Calc::thread_and_ln212_1_fu_504_p2() {
    and_ln212_1_fu_504_p2 = (p_Val2_2_reg_251.read() & xor_ln212_2_fu_498_p2.read());
}

void SM3Calc::thread_and_ln212_2_fu_510_p2() {
    and_ln212_2_fu_510_p2 = (select_ln212_3_fu_472_p3.read() & and_ln212_fu_492_p2.read());
}

void SM3Calc::thread_and_ln212_fu_492_p2() {
    and_ln212_fu_492_p2 = (shl_ln212_1_fu_480_p2.read() & lshr_ln212_fu_486_p2.read());
}

void SM3Calc::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void SM3Calc::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void SM3Calc::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void SM3Calc::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void SM3Calc::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void SM3Calc::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void SM3Calc::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void SM3Calc::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void SM3Calc::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void SM3Calc::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void SM3Calc::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void SM3Calc::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln236_fu_658_p2.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void SM3Calc::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void SM3Calc::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln236_fu_658_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void SM3Calc::thread_digest_address0() {
    digest_address0 =  (sc_lv<3>) (zext_ln238_1_fu_685_p1.read());
}

void SM3Calc::thread_digest_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        digest_ce0 = ap_const_logic_1;
    } else {
        digest_ce0 = ap_const_logic_0;
    }
}

void SM3Calc::thread_digest_d0() {
    digest_d0 = intermediateHash_q0.read();
}

void SM3Calc::thread_digest_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        digest_we0 = ap_const_logic_1;
    } else {
        digest_we0 = ap_const_logic_0;
    }
}

void SM3Calc::thread_grp_processmessageblock_fu_297_ap_start() {
    grp_processmessageblock_fu_297_ap_start = grp_processmessageblock_fu_297_ap_start_reg.read();
}

void SM3Calc::thread_i_6_fu_528_p2() {
    i_6_fu_528_p2 = (!i_1_reg_274.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(i_1_reg_274.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void SM3Calc::thread_i_7_fu_664_p2() {
    i_7_fu_664_p2 = (!i_3_reg_285.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(i_3_reg_285.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void SM3Calc::thread_i_fu_309_p2() {
    i_fu_309_p2 = (!i_0_reg_263.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(i_0_reg_263.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void SM3Calc::thread_icmp_ln210_fu_303_p2() {
    icmp_ln210_fu_303_p2 = (!i_0_reg_263.read().is_01() || !ap_const_lv6_20.is_01())? sc_lv<1>(): sc_lv<1>(i_0_reg_263.read() == ap_const_lv6_20);
}

void SM3Calc::thread_icmp_ln212_fu_390_p2() {
    icmp_ln212_fu_390_p2 = (!shl_ln_fu_377_p3.read().is_01() || !or_ln212_fu_384_p2.read().is_01())? sc_lv<1>(): (sc_biguint<8>(shl_ln_fu_377_p3.read()) > sc_biguint<8>(or_ln212_fu_384_p2.read()));
}

void SM3Calc::thread_icmp_ln222_fu_522_p2() {
    icmp_ln222_fu_522_p2 = (!i_1_reg_274.read().is_01() || !ap_const_lv5_10.is_01())? sc_lv<1>(): sc_lv<1>(i_1_reg_274.read() == ap_const_lv5_10);
}

void SM3Calc::thread_icmp_ln224_fu_552_p2() {
    icmp_ln224_fu_552_p2 = (!shl_ln1_fu_538_p3.read().is_01() || !or_ln224_fu_546_p2.read().is_01())? sc_lv<1>(): (sc_biguint<9>(shl_ln1_fu_538_p3.read()) > sc_biguint<9>(or_ln224_fu_546_p2.read()));
}

void SM3Calc::thread_icmp_ln236_fu_658_p2() {
    icmp_ln236_fu_658_p2 = (!i_3_reg_285.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(i_3_reg_285.read() == ap_const_lv4_8);
}

void SM3Calc::thread_intermediateHash_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        intermediateHash_address0 =  (sc_lv<3>) (zext_ln238_fu_680_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        intermediateHash_address0 =  (sc_lv<3>) (ap_const_lv64_6);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        intermediateHash_address0 =  (sc_lv<3>) (ap_const_lv64_4);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        intermediateHash_address0 =  (sc_lv<3>) (ap_const_lv64_2);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        intermediateHash_address0 =  (sc_lv<3>) (ap_const_lv64_0);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        intermediateHash_address0 = grp_processmessageblock_fu_297_intermediateHash_address0.read();
    } else {
        intermediateHash_address0 = "XXX";
    }
}

void SM3Calc::thread_intermediateHash_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        intermediateHash_address1 =  (sc_lv<3>) (ap_const_lv64_7);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        intermediateHash_address1 =  (sc_lv<3>) (ap_const_lv64_5);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        intermediateHash_address1 =  (sc_lv<3>) (ap_const_lv64_3);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        intermediateHash_address1 =  (sc_lv<3>) (ap_const_lv64_1);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        intermediateHash_address1 = grp_processmessageblock_fu_297_intermediateHash_address1.read();
    } else {
        intermediateHash_address1 = "XXX";
    }
}

void SM3Calc::thread_intermediateHash_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        intermediateHash_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        intermediateHash_ce0 = grp_processmessageblock_fu_297_intermediateHash_ce0.read();
    } else {
        intermediateHash_ce0 = ap_const_logic_0;
    }
}

void SM3Calc::thread_intermediateHash_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        intermediateHash_ce1 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        intermediateHash_ce1 = grp_processmessageblock_fu_297_intermediateHash_ce1.read();
    } else {
        intermediateHash_ce1 = ap_const_logic_0;
    }
}

void SM3Calc::thread_intermediateHash_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        intermediateHash_d0 = ap_const_lv32_E38DEE4D;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        intermediateHash_d0 = ap_const_lv32_A96F30BC;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        intermediateHash_d0 = ap_const_lv32_172442D7;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        intermediateHash_d0 = ap_const_lv32_7380166F;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        intermediateHash_d0 = grp_processmessageblock_fu_297_intermediateHash_d0.read();
    } else {
        intermediateHash_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void SM3Calc::thread_intermediateHash_d1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        intermediateHash_d1 = ap_const_lv32_B0FB0E4E;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        intermediateHash_d1 = ap_const_lv32_163138AA;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        intermediateHash_d1 = ap_const_lv32_DA8A0600;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        intermediateHash_d1 = ap_const_lv32_4914B2B9;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        intermediateHash_d1 = grp_processmessageblock_fu_297_intermediateHash_d1.read();
    } else {
        intermediateHash_d1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void SM3Calc::thread_intermediateHash_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln222_fu_522_p2.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        intermediateHash_we0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        intermediateHash_we0 = grp_processmessageblock_fu_297_intermediateHash_we0.read();
    } else {
        intermediateHash_we0 = ap_const_logic_0;
    }
}

void SM3Calc::thread_intermediateHash_we1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln222_fu_522_p2.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        intermediateHash_we1 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        intermediateHash_we1 = grp_processmessageblock_fu_297_intermediateHash_we1.read();
    } else {
        intermediateHash_we1 = ap_const_logic_0;
    }
}

void SM3Calc::thread_lshr_ln212_fu_486_p2() {
    lshr_ln212_fu_486_p2 = (!zext_ln212_6_fu_452_p1.read().is_01())? sc_lv<512>(): ap_const_lv512_lc_2 >> (unsigned short)zext_ln212_6_fu_452_p1.read().to_uint();
}

void SM3Calc::thread_lshr_ln224_1_fu_636_p2() {
    lshr_ln224_1_fu_636_p2 = (!zext_ln224_4_fu_626_p1.read().is_01())? sc_lv<512>(): ap_const_lv512_lc_2 >> (unsigned short)zext_ln224_4_fu_626_p1.read().to_uint();
}

void SM3Calc::thread_lshr_ln224_fu_630_p2() {
    lshr_ln224_fu_630_p2 = (!zext_ln224_3_fu_622_p1.read().is_01())? sc_lv<512>(): select_ln224_1_fu_601_p3.read() >> (unsigned short)zext_ln224_3_fu_622_p1.read().to_uint();
}

void SM3Calc::thread_messageBlock_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        messageBlock_address0 =  (sc_lv<4>) (zext_ln224_1_fu_653_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        messageBlock_address0 = grp_processmessageblock_fu_297_messageBlock_address0.read();
    } else {
        messageBlock_address0 =  (sc_lv<4>) ("XXXX");
    }
}

void SM3Calc::thread_messageBlock_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        messageBlock_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        messageBlock_ce0 = grp_processmessageblock_fu_297_messageBlock_ce0.read();
    } else {
        messageBlock_ce0 = ap_const_logic_0;
    }
}

void SM3Calc::thread_messageBlock_d0() {
    messageBlock_d0 = p_Result_s_fu_642_p2.read().range(32-1, 0);
}

void SM3Calc::thread_messageBlock_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln222_fu_522_p2.read()))) {
        messageBlock_we0 = ap_const_logic_1;
    } else {
        messageBlock_we0 = ap_const_logic_0;
    }
}

void SM3Calc::thread_message_address0() {
    message_address0 =  (sc_lv<5>) (zext_ln212_fu_315_p1.read());
}

void SM3Calc::thread_message_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        message_ce0 = ap_const_logic_1;
    } else {
        message_ce0 = ap_const_logic_0;
    }
}

void SM3Calc::thread_or_ln212_fu_384_p2() {
    or_ln212_fu_384_p2 = (shl_ln_fu_377_p3.read() | ap_const_lv8_7);
}

void SM3Calc::thread_or_ln224_fu_546_p2() {
    or_ln224_fu_546_p2 = (shl_ln1_fu_538_p3.read() | ap_const_lv9_1F);
}

void SM3Calc::thread_p_Result_1_fu_516_p2() {
    p_Result_1_fu_516_p2 = (and_ln212_1_fu_504_p2.read() | and_ln212_2_fu_510_p2.read());
}

void SM3Calc::thread_p_Result_2_fu_356_p4() {
    p_Result_2_fu_356_p4 = esl_bitset<512,512,32,32>(pack_fu_340_p2.read(), zext_ln218_fu_352_p1.read(), ap_const_lv32_1);
}

void SM3Calc::thread_p_Result_3_fu_366_p5() {
    p_Result_3_fu_366_p5 = esl_partset<512,512,8,32,32>(p_Result_2_fu_356_p4.read(), messageLen.read(), ap_const_lv32_0, ap_const_lv32_7);
}

void SM3Calc::thread_p_Result_s_fu_642_p2() {
    p_Result_s_fu_642_p2 = (lshr_ln224_fu_630_p2.read() & lshr_ln224_1_fu_636_p2.read());
}

void SM3Calc::thread_pack_fu_340_p2() {
    pack_fu_340_p2 = (!zext_ln216_1_fu_336_p1.read().is_01())? sc_lv<512>(): p_Val2_2_reg_251.read() << (unsigned short)zext_ln216_1_fu_336_p1.read().to_uint();
}

void SM3Calc::thread_select_ln212_1_fu_422_p3() {
    select_ln212_1_fu_422_p3 = (!icmp_ln212_fu_390_p2.read()[0].is_01())? sc_lv<10>(): ((icmp_ln212_fu_390_p2.read()[0].to_bool())? zext_ln212_2_fu_400_p1.read(): zext_ln212_1_fu_396_p1.read());
}

void SM3Calc::thread_select_ln212_2_fu_430_p3() {
    select_ln212_2_fu_430_p3 = (!icmp_ln212_fu_390_p2.read()[0].is_01())? sc_lv<10>(): ((icmp_ln212_fu_390_p2.read()[0].to_bool())? xor_ln212_fu_408_p2.read(): zext_ln212_1_fu_396_p1.read());
}

void SM3Calc::thread_select_ln212_3_fu_472_p3() {
    select_ln212_3_fu_472_p3 = (!icmp_ln212_fu_390_p2.read()[0].is_01())? sc_lv<512>(): ((icmp_ln212_fu_390_p2.read()[0].to_bool())? tmp_fu_462_p4.read(): shl_ln212_fu_456_p2.read());
}

void SM3Calc::thread_select_ln212_fu_414_p3() {
    select_ln212_fu_414_p3 = (!icmp_ln212_fu_390_p2.read()[0].is_01())? sc_lv<10>(): ((icmp_ln212_fu_390_p2.read()[0].to_bool())? zext_ln212_1_fu_396_p1.read(): zext_ln212_2_fu_400_p1.read());
}

void SM3Calc::thread_select_ln224_1_fu_601_p3() {
    select_ln224_1_fu_601_p3 = (!icmp_ln224_fu_552_p2.read()[0].is_01())? sc_lv<512>(): ((icmp_ln224_fu_552_p2.read()[0].to_bool())? tmp_3_fu_566_p4.read(): p_Result_3_reg_715.read());
}

void SM3Calc::thread_select_ln224_2_fu_608_p3() {
    select_ln224_2_fu_608_p3 = (!icmp_ln224_fu_552_p2.read()[0].is_01())? sc_lv<10>(): ((icmp_ln224_fu_552_p2.read()[0].to_bool())? xor_ln224_fu_581_p2.read(): zext_ln224_fu_558_p1.read());
}

void SM3Calc::thread_select_ln224_fu_593_p3() {
    select_ln224_fu_593_p3 = (!icmp_ln224_fu_552_p2.read()[0].is_01())? sc_lv<10>(): ((icmp_ln224_fu_552_p2.read()[0].to_bool())? sub_ln224_fu_575_p2.read(): sub_ln224_1_fu_587_p2.read());
}

void SM3Calc::thread_shl_ln1_fu_538_p3() {
    shl_ln1_fu_538_p3 = esl_concat<4,5>(trunc_ln224_fu_534_p1.read(), ap_const_lv5_0);
}

void SM3Calc::thread_shl_ln212_1_fu_480_p2() {
    shl_ln212_1_fu_480_p2 = (!zext_ln212_5_fu_448_p1.read().is_01())? sc_lv<512>(): ap_const_lv512_lc_2 << (unsigned short)zext_ln212_5_fu_448_p1.read().to_uint();
}

void SM3Calc::thread_shl_ln212_fu_456_p2() {
    shl_ln212_fu_456_p2 = (!zext_ln212_4_fu_444_p1.read().is_01())? sc_lv<512>(): zext_ln212_3_fu_404_p1.read() << (unsigned short)zext_ln212_4_fu_444_p1.read().to_uint();
}

void SM3Calc::thread_shl_ln_fu_377_p3() {
    shl_ln_fu_377_p3 = esl_concat<5,3>(trunc_ln212_reg_710.read(), ap_const_lv3_0);
}

void SM3Calc::thread_sub_ln216_fu_330_p2() {
    sub_ln216_fu_330_p2 = (!ap_const_lv10_200.is_01() || !zext_ln216_2_fu_327_p1.read().is_01())? sc_lv<10>(): (sc_bigint<10>(ap_const_lv10_200) - sc_biguint<10>(zext_ln216_2_fu_327_p1.read()));
}

void SM3Calc::thread_sub_ln224_1_fu_587_p2() {
    sub_ln224_1_fu_587_p2 = (!zext_ln224_2_fu_562_p1.read().is_01() || !zext_ln224_fu_558_p1.read().is_01())? sc_lv<10>(): (sc_biguint<10>(zext_ln224_2_fu_562_p1.read()) - sc_biguint<10>(zext_ln224_fu_558_p1.read()));
}

void SM3Calc::thread_sub_ln224_2_fu_616_p2() {
    sub_ln224_2_fu_616_p2 = (!ap_const_lv10_1FF.is_01() || !select_ln224_fu_593_p3.read().is_01())? sc_lv<10>(): (sc_biguint<10>(ap_const_lv10_1FF) - sc_biguint<10>(select_ln224_fu_593_p3.read()));
}

void SM3Calc::thread_sub_ln224_fu_575_p2() {
    sub_ln224_fu_575_p2 = (!zext_ln224_fu_558_p1.read().is_01() || !zext_ln224_2_fu_562_p1.read().is_01())? sc_lv<10>(): (sc_biguint<10>(zext_ln224_fu_558_p1.read()) - sc_biguint<10>(zext_ln224_2_fu_562_p1.read()));
}

void SM3Calc::thread_tmp_3_fu_566_p4() {
    tmp_3_fu_566_p4 = p_Result_3_reg_715.read().range(0, 511);
}

void SM3Calc::thread_tmp_fu_462_p4() {
    tmp_fu_462_p4 = shl_ln212_fu_456_p2.read().range(0, 511);
}

void SM3Calc::thread_trunc_ln212_fu_320_p1() {
    trunc_ln212_fu_320_p1 = i_0_reg_263.read().range(5-1, 0);
}

void SM3Calc::thread_trunc_ln224_fu_534_p1() {
    trunc_ln224_fu_534_p1 = i_1_reg_274.read().range(4-1, 0);
}

void SM3Calc::thread_trunc_ln238_fu_670_p1() {
    trunc_ln238_fu_670_p1 = i_3_reg_285.read().range(3-1, 0);
}

void SM3Calc::thread_xor_ln212_1_fu_438_p2() {
    xor_ln212_1_fu_438_p2 = (select_ln212_fu_414_p3.read() ^ ap_const_lv10_1FF);
}

void SM3Calc::thread_xor_ln212_2_fu_498_p2() {
    xor_ln212_2_fu_498_p2 = (and_ln212_fu_492_p2.read() ^ ap_const_lv512_lc_2);
}

void SM3Calc::thread_xor_ln212_fu_408_p2() {
    xor_ln212_fu_408_p2 = (zext_ln212_1_fu_396_p1.read() ^ ap_const_lv10_1FF);
}

void SM3Calc::thread_xor_ln218_fu_346_p2() {
    xor_ln218_fu_346_p2 = (zext_ln216_fu_324_p1.read() ^ ap_const_lv9_1FF);
}

void SM3Calc::thread_xor_ln224_fu_581_p2() {
    xor_ln224_fu_581_p2 = (zext_ln224_fu_558_p1.read() ^ ap_const_lv10_1FF);
}

void SM3Calc::thread_xor_ln238_fu_674_p2() {
    xor_ln238_fu_674_p2 = (trunc_ln238_fu_670_p1.read() ^ ap_const_lv3_7);
}

void SM3Calc::thread_zext_ln212_1_fu_396_p1() {
    zext_ln212_1_fu_396_p1 = esl_zext<10,8>(shl_ln_fu_377_p3.read());
}

void SM3Calc::thread_zext_ln212_2_fu_400_p1() {
    zext_ln212_2_fu_400_p1 = esl_zext<10,8>(or_ln212_fu_384_p2.read());
}

void SM3Calc::thread_zext_ln212_3_fu_404_p1() {
    zext_ln212_3_fu_404_p1 = esl_zext<512,8>(message_q0.read());
}

void SM3Calc::thread_zext_ln212_4_fu_444_p1() {
    zext_ln212_4_fu_444_p1 = esl_zext<512,10>(select_ln212_2_fu_430_p3.read());
}

void SM3Calc::thread_zext_ln212_5_fu_448_p1() {
    zext_ln212_5_fu_448_p1 = esl_zext<512,10>(select_ln212_1_fu_422_p3.read());
}

void SM3Calc::thread_zext_ln212_6_fu_452_p1() {
    zext_ln212_6_fu_452_p1 = esl_zext<512,10>(xor_ln212_1_fu_438_p2.read());
}

void SM3Calc::thread_zext_ln212_fu_315_p1() {
    zext_ln212_fu_315_p1 = esl_zext<64,6>(i_0_reg_263.read());
}

void SM3Calc::thread_zext_ln216_1_fu_336_p1() {
    zext_ln216_1_fu_336_p1 = esl_zext<512,10>(sub_ln216_fu_330_p2.read());
}

void SM3Calc::thread_zext_ln216_2_fu_327_p1() {
    zext_ln216_2_fu_327_p1 = esl_zext<10,8>(messageLen.read());
}

void SM3Calc::thread_zext_ln216_fu_324_p1() {
    zext_ln216_fu_324_p1 = esl_zext<9,8>(messageLen.read());
}

void SM3Calc::thread_zext_ln218_fu_352_p1() {
    zext_ln218_fu_352_p1 = esl_zext<32,9>(xor_ln218_fu_346_p2.read());
}

void SM3Calc::thread_zext_ln224_1_fu_653_p1() {
    zext_ln224_1_fu_653_p1 = esl_zext<64,5>(i_1_reg_274.read());
}

void SM3Calc::thread_zext_ln224_2_fu_562_p1() {
    zext_ln224_2_fu_562_p1 = esl_zext<10,9>(or_ln224_fu_546_p2.read());
}

void SM3Calc::thread_zext_ln224_3_fu_622_p1() {
    zext_ln224_3_fu_622_p1 = esl_zext<512,10>(select_ln224_2_fu_608_p3.read());
}

void SM3Calc::thread_zext_ln224_4_fu_626_p1() {
    zext_ln224_4_fu_626_p1 = esl_zext<512,10>(sub_ln224_2_fu_616_p2.read());
}

void SM3Calc::thread_zext_ln224_fu_558_p1() {
    zext_ln224_fu_558_p1 = esl_zext<10,9>(shl_ln1_fu_538_p3.read());
}

void SM3Calc::thread_zext_ln238_1_fu_685_p1() {
    zext_ln238_1_fu_685_p1 = esl_zext<64,4>(i_3_reg_285.read());
}

void SM3Calc::thread_zext_ln238_fu_680_p1() {
    zext_ln238_fu_680_p1 = esl_zext<64,3>(xor_ln238_fu_674_p2.read());
}

void SM3Calc::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln210_fu_303_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln222_fu_522_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && esl_seteq<1,1,1>(grp_processmessageblock_fu_297_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state10;
            } else {
                ap_NS_fsm = ap_ST_fsm_state9;
            }
            break;
        case 512 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln236_fu_658_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state11;
            }
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<11>) ("XXXXXXXXXXX");
            break;
    }
}

void SM3Calc::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"message_address0\" :  \"" << message_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"message_ce0\" :  \"" << message_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"message_q0\" :  \"" << message_q0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"messageLen\" :  \"" << messageLen.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"digest_address0\" :  \"" << digest_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"digest_ce0\" :  \"" << digest_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"digest_we0\" :  \"" << digest_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"digest_d0\" :  \"" << digest_d0.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

