// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="SM3Calc,hls_ip_2019_1,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7vx980t-ffg1930-2,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.196933,HLS_SYN_LAT=611,HLS_SYN_TPT=none,HLS_SYN_MEM=5,HLS_SYN_DSP=0,HLS_SYN_FF=2005,HLS_SYN_LUT=20173,HLS_VERSION=2019_1}" *)

module SM3Calc (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        message_address0,
        message_ce0,
        message_q0,
        messageLen,
        digest_address0,
        digest_ce0,
        digest_we0,
        digest_d0
);

parameter    ap_ST_fsm_state1 = 11'd1;
parameter    ap_ST_fsm_state2 = 11'd2;
parameter    ap_ST_fsm_state3 = 11'd4;
parameter    ap_ST_fsm_state4 = 11'd8;
parameter    ap_ST_fsm_state5 = 11'd16;
parameter    ap_ST_fsm_state6 = 11'd32;
parameter    ap_ST_fsm_state7 = 11'd64;
parameter    ap_ST_fsm_state8 = 11'd128;
parameter    ap_ST_fsm_state9 = 11'd256;
parameter    ap_ST_fsm_state10 = 11'd512;
parameter    ap_ST_fsm_state11 = 11'd1024;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [4:0] message_address0;
output   message_ce0;
input  [7:0] message_q0;
input  [7:0] messageLen;
output  [2:0] digest_address0;
output   digest_ce0;
output   digest_we0;
output  [31:0] digest_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg message_ce0;
reg digest_ce0;
reg digest_we0;

(* fsm_encoding = "none" *) reg   [10:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [5:0] i_fu_309_p2;
reg   [5:0] i_reg_700;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln210_fu_303_p2;
wire   [4:0] trunc_ln212_fu_320_p1;
reg   [4:0] trunc_ln212_reg_710;
wire   [511:0] p_Result_3_fu_366_p5;
reg   [511:0] p_Result_3_reg_715;
wire   [511:0] p_Result_1_fu_516_p2;
wire    ap_CS_fsm_state3;
wire   [4:0] i_6_fu_528_p2;
wire    ap_CS_fsm_state4;
wire   [3:0] i_7_fu_664_p2;
reg   [3:0] i_7_reg_737;
wire    ap_CS_fsm_state10;
wire   [0:0] icmp_ln236_fu_658_p2;
reg   [3:0] messageBlock_address0;
reg    messageBlock_ce0;
reg    messageBlock_we0;
wire   [31:0] messageBlock_d0;
wire   [31:0] messageBlock_q0;
reg   [2:0] intermediateHash_address0;
reg    intermediateHash_ce0;
reg    intermediateHash_we0;
reg   [31:0] intermediateHash_d0;
wire   [31:0] intermediateHash_q0;
reg   [2:0] intermediateHash_address1;
reg    intermediateHash_ce1;
reg    intermediateHash_we1;
reg   [31:0] intermediateHash_d1;
wire   [31:0] intermediateHash_q1;
wire    grp_processmessageblock_fu_297_ap_start;
wire    grp_processmessageblock_fu_297_ap_done;
wire    grp_processmessageblock_fu_297_ap_idle;
wire    grp_processmessageblock_fu_297_ap_ready;
wire   [2:0] grp_processmessageblock_fu_297_intermediateHash_address0;
wire    grp_processmessageblock_fu_297_intermediateHash_ce0;
wire    grp_processmessageblock_fu_297_intermediateHash_we0;
wire   [31:0] grp_processmessageblock_fu_297_intermediateHash_d0;
wire   [2:0] grp_processmessageblock_fu_297_intermediateHash_address1;
wire    grp_processmessageblock_fu_297_intermediateHash_ce1;
wire    grp_processmessageblock_fu_297_intermediateHash_we1;
wire   [31:0] grp_processmessageblock_fu_297_intermediateHash_d1;
wire   [3:0] grp_processmessageblock_fu_297_messageBlock_address0;
wire    grp_processmessageblock_fu_297_messageBlock_ce0;
reg   [511:0] p_Val2_2_reg_251;
reg   [5:0] i_0_reg_263;
reg   [4:0] i_1_reg_274;
wire   [0:0] icmp_ln222_fu_522_p2;
reg   [3:0] i_3_reg_285;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state11;
reg    grp_processmessageblock_fu_297_ap_start_reg;
wire    ap_CS_fsm_state8;
wire   [63:0] zext_ln212_fu_315_p1;
wire   [63:0] zext_ln224_1_fu_653_p1;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state7;
wire   [63:0] zext_ln238_fu_680_p1;
wire   [63:0] zext_ln238_1_fu_685_p1;
wire   [9:0] zext_ln216_2_fu_327_p1;
wire   [9:0] sub_ln216_fu_330_p2;
wire   [511:0] zext_ln216_1_fu_336_p1;
wire   [8:0] zext_ln216_fu_324_p1;
wire   [8:0] xor_ln218_fu_346_p2;
wire   [511:0] pack_fu_340_p2;
wire   [31:0] zext_ln218_fu_352_p1;
reg   [511:0] p_Result_2_fu_356_p4;
wire   [7:0] shl_ln_fu_377_p3;
wire   [7:0] or_ln212_fu_384_p2;
wire   [9:0] zext_ln212_1_fu_396_p1;
wire   [0:0] icmp_ln212_fu_390_p2;
wire   [9:0] zext_ln212_2_fu_400_p1;
wire   [9:0] xor_ln212_fu_408_p2;
wire   [9:0] select_ln212_fu_414_p3;
wire   [9:0] select_ln212_2_fu_430_p3;
wire   [9:0] select_ln212_1_fu_422_p3;
wire   [9:0] xor_ln212_1_fu_438_p2;
wire   [511:0] zext_ln212_3_fu_404_p1;
wire   [511:0] zext_ln212_4_fu_444_p1;
wire   [511:0] shl_ln212_fu_456_p2;
reg   [511:0] tmp_fu_462_p4;
wire   [511:0] zext_ln212_5_fu_448_p1;
wire   [511:0] zext_ln212_6_fu_452_p1;
wire   [511:0] shl_ln212_1_fu_480_p2;
wire   [511:0] lshr_ln212_fu_486_p2;
wire   [511:0] and_ln212_fu_492_p2;
wire   [511:0] xor_ln212_2_fu_498_p2;
wire   [511:0] select_ln212_3_fu_472_p3;
wire   [511:0] and_ln212_1_fu_504_p2;
wire   [511:0] and_ln212_2_fu_510_p2;
wire   [3:0] trunc_ln224_fu_534_p1;
wire   [8:0] shl_ln1_fu_538_p3;
wire   [8:0] or_ln224_fu_546_p2;
wire   [9:0] zext_ln224_fu_558_p1;
wire   [9:0] zext_ln224_2_fu_562_p1;
wire   [0:0] icmp_ln224_fu_552_p2;
wire   [9:0] sub_ln224_fu_575_p2;
wire   [9:0] sub_ln224_1_fu_587_p2;
reg   [511:0] tmp_3_fu_566_p4;
wire   [9:0] xor_ln224_fu_581_p2;
wire   [9:0] select_ln224_fu_593_p3;
wire   [9:0] select_ln224_2_fu_608_p3;
wire   [9:0] sub_ln224_2_fu_616_p2;
wire   [511:0] select_ln224_1_fu_601_p3;
wire   [511:0] zext_ln224_3_fu_622_p1;
wire   [511:0] zext_ln224_4_fu_626_p1;
wire   [511:0] lshr_ln224_fu_630_p2;
wire   [511:0] lshr_ln224_1_fu_636_p2;
wire   [511:0] p_Result_s_fu_642_p2;
wire   [2:0] trunc_ln238_fu_670_p1;
wire   [2:0] xor_ln238_fu_674_p2;
reg   [10:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 11'd1;
#0 grp_processmessageblock_fu_297_ap_start_reg = 1'b0;
end

SM3Calc_messageBldEe #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
messageBlock_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(messageBlock_address0),
    .ce0(messageBlock_ce0),
    .we0(messageBlock_we0),
    .d0(messageBlock_d0),
    .q0(messageBlock_q0)
);

SM3Calc_intermedieOg #(
    .DataWidth( 32 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
intermediateHash_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(intermediateHash_address0),
    .ce0(intermediateHash_ce0),
    .we0(intermediateHash_we0),
    .d0(intermediateHash_d0),
    .q0(intermediateHash_q0),
    .address1(intermediateHash_address1),
    .ce1(intermediateHash_ce1),
    .we1(intermediateHash_we1),
    .d1(intermediateHash_d1),
    .q1(intermediateHash_q1)
);

processmessageblock grp_processmessageblock_fu_297(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_processmessageblock_fu_297_ap_start),
    .ap_done(grp_processmessageblock_fu_297_ap_done),
    .ap_idle(grp_processmessageblock_fu_297_ap_idle),
    .ap_ready(grp_processmessageblock_fu_297_ap_ready),
    .intermediateHash_address0(grp_processmessageblock_fu_297_intermediateHash_address0),
    .intermediateHash_ce0(grp_processmessageblock_fu_297_intermediateHash_ce0),
    .intermediateHash_we0(grp_processmessageblock_fu_297_intermediateHash_we0),
    .intermediateHash_d0(grp_processmessageblock_fu_297_intermediateHash_d0),
    .intermediateHash_q0(intermediateHash_q0),
    .intermediateHash_address1(grp_processmessageblock_fu_297_intermediateHash_address1),
    .intermediateHash_ce1(grp_processmessageblock_fu_297_intermediateHash_ce1),
    .intermediateHash_we1(grp_processmessageblock_fu_297_intermediateHash_we1),
    .intermediateHash_d1(grp_processmessageblock_fu_297_intermediateHash_d1),
    .intermediateHash_q1(intermediateHash_q1),
    .messageBlock_address0(grp_processmessageblock_fu_297_messageBlock_address0),
    .messageBlock_ce0(grp_processmessageblock_fu_297_messageBlock_ce0),
    .messageBlock_q0(messageBlock_q0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_processmessageblock_fu_297_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state8)) begin
            grp_processmessageblock_fu_297_ap_start_reg <= 1'b1;
        end else if ((grp_processmessageblock_fu_297_ap_ready == 1'b1)) begin
            grp_processmessageblock_fu_297_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        i_0_reg_263 <= i_reg_700;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        i_0_reg_263 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln222_fu_522_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        i_1_reg_274 <= i_6_fu_528_p2;
    end else if (((icmp_ln210_fu_303_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        i_1_reg_274 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        i_3_reg_285 <= i_7_reg_737;
    end else if (((1'b1 == ap_CS_fsm_state9) & (grp_processmessageblock_fu_297_ap_done == 1'b1))) begin
        i_3_reg_285 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        p_Val2_2_reg_251 <= p_Result_1_fu_516_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        p_Val2_2_reg_251 <= 512'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        i_7_reg_737 <= i_7_fu_664_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_reg_700 <= i_fu_309_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln210_fu_303_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        p_Result_3_reg_715 <= p_Result_3_fu_366_p5;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln210_fu_303_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        trunc_ln212_reg_710 <= trunc_ln212_fu_320_p1;
    end
end

always @ (*) begin
    if (((icmp_ln236_fu_658_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln236_fu_658_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        digest_ce0 = 1'b1;
    end else begin
        digest_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        digest_we0 = 1'b1;
    end else begin
        digest_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        intermediateHash_address0 = zext_ln238_fu_680_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        intermediateHash_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        intermediateHash_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        intermediateHash_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        intermediateHash_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        intermediateHash_address0 = grp_processmessageblock_fu_297_intermediateHash_address0;
    end else begin
        intermediateHash_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        intermediateHash_address1 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        intermediateHash_address1 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        intermediateHash_address1 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        intermediateHash_address1 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        intermediateHash_address1 = grp_processmessageblock_fu_297_intermediateHash_address1;
    end else begin
        intermediateHash_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        intermediateHash_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        intermediateHash_ce0 = grp_processmessageblock_fu_297_intermediateHash_ce0;
    end else begin
        intermediateHash_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        intermediateHash_ce1 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        intermediateHash_ce1 = grp_processmessageblock_fu_297_intermediateHash_ce1;
    end else begin
        intermediateHash_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        intermediateHash_d0 = 32'd3817729613;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        intermediateHash_d0 = 32'd2842636476;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        intermediateHash_d0 = 32'd388252375;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        intermediateHash_d0 = 32'd1937774191;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        intermediateHash_d0 = grp_processmessageblock_fu_297_intermediateHash_d0;
    end else begin
        intermediateHash_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        intermediateHash_d1 = 32'd2969243214;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        intermediateHash_d1 = 32'd372324522;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        intermediateHash_d1 = 32'd3666478592;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        intermediateHash_d1 = 32'd1226093241;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        intermediateHash_d1 = grp_processmessageblock_fu_297_intermediateHash_d1;
    end else begin
        intermediateHash_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | ((icmp_ln222_fu_522_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4)))) begin
        intermediateHash_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        intermediateHash_we0 = grp_processmessageblock_fu_297_intermediateHash_we0;
    end else begin
        intermediateHash_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | ((icmp_ln222_fu_522_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4)))) begin
        intermediateHash_we1 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        intermediateHash_we1 = grp_processmessageblock_fu_297_intermediateHash_we1;
    end else begin
        intermediateHash_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        messageBlock_address0 = zext_ln224_1_fu_653_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        messageBlock_address0 = grp_processmessageblock_fu_297_messageBlock_address0;
    end else begin
        messageBlock_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        messageBlock_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        messageBlock_ce0 = grp_processmessageblock_fu_297_messageBlock_ce0;
    end else begin
        messageBlock_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln222_fu_522_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        messageBlock_we0 = 1'b1;
    end else begin
        messageBlock_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        message_ce0 = 1'b1;
    end else begin
        message_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln210_fu_303_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_state4 : begin
            if (((icmp_ln222_fu_522_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            if (((1'b1 == ap_CS_fsm_state9) & (grp_processmessageblock_fu_297_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state10 : begin
            if (((icmp_ln236_fu_658_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign and_ln212_1_fu_504_p2 = (xor_ln212_2_fu_498_p2 & p_Val2_2_reg_251);

assign and_ln212_2_fu_510_p2 = (select_ln212_3_fu_472_p3 & and_ln212_fu_492_p2);

assign and_ln212_fu_492_p2 = (shl_ln212_1_fu_480_p2 & lshr_ln212_fu_486_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign digest_address0 = zext_ln238_1_fu_685_p1;

assign digest_d0 = intermediateHash_q0;

assign grp_processmessageblock_fu_297_ap_start = grp_processmessageblock_fu_297_ap_start_reg;

assign i_6_fu_528_p2 = (i_1_reg_274 + 5'd1);

assign i_7_fu_664_p2 = (i_3_reg_285 + 4'd1);

assign i_fu_309_p2 = (i_0_reg_263 + 6'd1);

assign icmp_ln210_fu_303_p2 = ((i_0_reg_263 == 6'd32) ? 1'b1 : 1'b0);

assign icmp_ln212_fu_390_p2 = ((shl_ln_fu_377_p3 > or_ln212_fu_384_p2) ? 1'b1 : 1'b0);

assign icmp_ln222_fu_522_p2 = ((i_1_reg_274 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln224_fu_552_p2 = ((shl_ln1_fu_538_p3 > or_ln224_fu_546_p2) ? 1'b1 : 1'b0);

assign icmp_ln236_fu_658_p2 = ((i_3_reg_285 == 4'd8) ? 1'b1 : 1'b0);

assign lshr_ln212_fu_486_p2 = 512'd13407807929942597099574024998205846127479365820592393377723561443721764030073546976801874298166903427690031858186486050853753882811946569946433649006084095 >> zext_ln212_6_fu_452_p1;

assign lshr_ln224_1_fu_636_p2 = 512'd13407807929942597099574024998205846127479365820592393377723561443721764030073546976801874298166903427690031858186486050853753882811946569946433649006084095 >> zext_ln224_4_fu_626_p1;

assign lshr_ln224_fu_630_p2 = select_ln224_1_fu_601_p3 >> zext_ln224_3_fu_622_p1;

assign messageBlock_d0 = p_Result_s_fu_642_p2[31:0];

assign message_address0 = zext_ln212_fu_315_p1;

assign or_ln212_fu_384_p2 = (shl_ln_fu_377_p3 | 8'd7);

assign or_ln224_fu_546_p2 = (shl_ln1_fu_538_p3 | 9'd31);

assign p_Result_1_fu_516_p2 = (and_ln212_2_fu_510_p2 | and_ln212_1_fu_504_p2);

always @ (*) begin
    p_Result_2_fu_356_p4 = pack_fu_340_p2;
    p_Result_2_fu_356_p4[zext_ln218_fu_352_p1] = |(32'd1);
end

assign p_Result_3_fu_366_p5 = {{p_Result_2_fu_356_p4[511:8]}, {messageLen}};

assign p_Result_s_fu_642_p2 = (lshr_ln224_fu_630_p2 & lshr_ln224_1_fu_636_p2);

assign pack_fu_340_p2 = p_Val2_2_reg_251 << zext_ln216_1_fu_336_p1;

assign select_ln212_1_fu_422_p3 = ((icmp_ln212_fu_390_p2[0:0] === 1'b1) ? zext_ln212_2_fu_400_p1 : zext_ln212_1_fu_396_p1);

assign select_ln212_2_fu_430_p3 = ((icmp_ln212_fu_390_p2[0:0] === 1'b1) ? xor_ln212_fu_408_p2 : zext_ln212_1_fu_396_p1);

assign select_ln212_3_fu_472_p3 = ((icmp_ln212_fu_390_p2[0:0] === 1'b1) ? tmp_fu_462_p4 : shl_ln212_fu_456_p2);

assign select_ln212_fu_414_p3 = ((icmp_ln212_fu_390_p2[0:0] === 1'b1) ? zext_ln212_1_fu_396_p1 : zext_ln212_2_fu_400_p1);

assign select_ln224_1_fu_601_p3 = ((icmp_ln224_fu_552_p2[0:0] === 1'b1) ? tmp_3_fu_566_p4 : p_Result_3_reg_715);

assign select_ln224_2_fu_608_p3 = ((icmp_ln224_fu_552_p2[0:0] === 1'b1) ? xor_ln224_fu_581_p2 : zext_ln224_fu_558_p1);

assign select_ln224_fu_593_p3 = ((icmp_ln224_fu_552_p2[0:0] === 1'b1) ? sub_ln224_fu_575_p2 : sub_ln224_1_fu_587_p2);

assign shl_ln1_fu_538_p3 = {{trunc_ln224_fu_534_p1}, {5'd0}};

assign shl_ln212_1_fu_480_p2 = 512'd13407807929942597099574024998205846127479365820592393377723561443721764030073546976801874298166903427690031858186486050853753882811946569946433649006084095 << zext_ln212_5_fu_448_p1;

assign shl_ln212_fu_456_p2 = zext_ln212_3_fu_404_p1 << zext_ln212_4_fu_444_p1;

assign shl_ln_fu_377_p3 = {{trunc_ln212_reg_710}, {3'd0}};

assign sub_ln216_fu_330_p2 = ($signed(10'd512) - $signed(zext_ln216_2_fu_327_p1));

assign sub_ln224_1_fu_587_p2 = (zext_ln224_2_fu_562_p1 - zext_ln224_fu_558_p1);

assign sub_ln224_2_fu_616_p2 = (10'd511 - select_ln224_fu_593_p3);

assign sub_ln224_fu_575_p2 = (zext_ln224_fu_558_p1 - zext_ln224_2_fu_562_p1);

integer ap_tvar_int_0;

always @ (p_Result_3_reg_715) begin
    for (ap_tvar_int_0 = 512 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 511 - 0) begin
            tmp_3_fu_566_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            tmp_3_fu_566_p4[ap_tvar_int_0] = p_Result_3_reg_715[511 - ap_tvar_int_0];
        end
    end
end

integer ap_tvar_int_1;

always @ (shl_ln212_fu_456_p2) begin
    for (ap_tvar_int_1 = 512 - 1; ap_tvar_int_1 >= 0; ap_tvar_int_1 = ap_tvar_int_1 - 1) begin
        if (ap_tvar_int_1 > 511 - 0) begin
            tmp_fu_462_p4[ap_tvar_int_1] = 1'b0;
        end else begin
            tmp_fu_462_p4[ap_tvar_int_1] = shl_ln212_fu_456_p2[511 - ap_tvar_int_1];
        end
    end
end

assign trunc_ln212_fu_320_p1 = i_0_reg_263[4:0];

assign trunc_ln224_fu_534_p1 = i_1_reg_274[3:0];

assign trunc_ln238_fu_670_p1 = i_3_reg_285[2:0];

assign xor_ln212_1_fu_438_p2 = (select_ln212_fu_414_p3 ^ 10'd511);

assign xor_ln212_2_fu_498_p2 = (512'd13407807929942597099574024998205846127479365820592393377723561443721764030073546976801874298166903427690031858186486050853753882811946569946433649006084095 ^ and_ln212_fu_492_p2);

assign xor_ln212_fu_408_p2 = (zext_ln212_1_fu_396_p1 ^ 10'd511);

assign xor_ln218_fu_346_p2 = (zext_ln216_fu_324_p1 ^ 9'd511);

assign xor_ln224_fu_581_p2 = (zext_ln224_fu_558_p1 ^ 10'd511);

assign xor_ln238_fu_674_p2 = (trunc_ln238_fu_670_p1 ^ 3'd7);

assign zext_ln212_1_fu_396_p1 = shl_ln_fu_377_p3;

assign zext_ln212_2_fu_400_p1 = or_ln212_fu_384_p2;

assign zext_ln212_3_fu_404_p1 = message_q0;

assign zext_ln212_4_fu_444_p1 = select_ln212_2_fu_430_p3;

assign zext_ln212_5_fu_448_p1 = select_ln212_1_fu_422_p3;

assign zext_ln212_6_fu_452_p1 = xor_ln212_1_fu_438_p2;

assign zext_ln212_fu_315_p1 = i_0_reg_263;

assign zext_ln216_1_fu_336_p1 = sub_ln216_fu_330_p2;

assign zext_ln216_2_fu_327_p1 = messageLen;

assign zext_ln216_fu_324_p1 = messageLen;

assign zext_ln218_fu_352_p1 = xor_ln218_fu_346_p2;

assign zext_ln224_1_fu_653_p1 = i_1_reg_274;

assign zext_ln224_2_fu_562_p1 = or_ln224_fu_546_p2;

assign zext_ln224_3_fu_622_p1 = select_ln224_2_fu_608_p3;

assign zext_ln224_4_fu_626_p1 = sub_ln224_2_fu_616_p2;

assign zext_ln224_fu_558_p1 = shl_ln1_fu_538_p3;

assign zext_ln238_1_fu_685_p1 = i_3_reg_285;

assign zext_ln238_fu_680_p1 = xor_ln238_fu_674_p2;

endmodule //SM3Calc
