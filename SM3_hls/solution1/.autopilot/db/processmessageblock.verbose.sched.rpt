

================================================================
== Vivado HLS Report for 'processmessageblock'
================================================================
* Date:           Sat Mar 13 22:42:56 2021

* Version:        2019.1 (Build 2552052 on Fri May 24 15:28:33 MDT 2019)
* Project:        SM3
* Solution:       solution1
* Product family: virtex7
* Target device:  xc7vx980t-ffg1930-2


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     7.197|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |  507|  507|  507|  507|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |          |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name| min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |- Loop 1  |   32|   32|         2|          -|          -|    16|    no    |
        |- Loop 2  |  208|  208|         4|          -|          -|    52|    no    |
        |- Loop 3  |  128|  128|         2|          -|          -|    64|    no    |
        |- Loop 4  |  128|  128|         2|          -|          -|    64|    no    |
        +----------+-----+-----+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 18
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 4 
3 --> 2 
4 --> 5 8 
5 --> 6 
6 --> 7 
7 --> 4 
8 --> 9 10 
9 --> 8 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 15 16 
15 --> 14 
16 --> 17 
17 --> 18 
18 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.85>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%intermediateHash_add = getelementptr [8 x i32]* %intermediateHash, i64 0, i64 0" [SM3/src/SM3.c:103]   --->   Operation 19 'getelementptr' 'intermediateHash_add' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%W = alloca [68 x i32], align 16" [SM3/src/SM3.c:106]   --->   Operation 20 'alloca' 'W' <Predicate = true> <Delay = 0.00> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.14> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%W_s = alloca [64 x i32], align 16" [SM3/src/SM3.c:107]   --->   Operation 21 'alloca' 'W_s' <Predicate = true> <Delay = 0.00> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.14> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_1 : Operation 22 [1/1] (0.85ns)   --->   "br label %1" [SM3/src/SM3.c:121]   --->   Operation 22 'br' <Predicate = true> <Delay = 0.85>

State 2 <SV = 1> <Delay = 1.14>
ST_2 : Operation 23 [1/1] (0.00ns)   --->   "%i_0 = phi i5 [ 0, %0 ], [ %i, %2 ]"   --->   Operation 23 'phi' 'i_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 24 [1/1] (0.87ns)   --->   "%icmp_ln121 = icmp eq i5 %i_0, -16" [SM3/src/SM3.c:121]   --->   Operation 24 'icmp' 'icmp_ln121' <Predicate = true> <Delay = 0.87> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.86> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 25 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 16, i64 16, i64 16)"   --->   Operation 25 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 26 [1/1] (1.09ns)   --->   "%i = add i5 %i_0, 1" [SM3/src/SM3.c:121]   --->   Operation 26 'add' 'i' <Predicate = true> <Delay = 1.09> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.51> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 27 [1/1] (0.00ns)   --->   "br i1 %icmp_ln121, label %.preheader3.preheader, label %2" [SM3/src/SM3.c:121]   --->   Operation 27 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 28 [1/1] (0.00ns)   --->   "%zext_ln123 = zext i5 %i_0 to i64" [SM3/src/SM3.c:123]   --->   Operation 28 'zext' 'zext_ln123' <Predicate = (!icmp_ln121)> <Delay = 0.00>
ST_2 : Operation 29 [1/1] (0.00ns)   --->   "%messageBlock_addr = getelementptr [16 x i32]* %messageBlock, i64 0, i64 %zext_ln123" [SM3/src/SM3.c:123]   --->   Operation 29 'getelementptr' 'messageBlock_addr' <Predicate = (!icmp_ln121)> <Delay = 0.00>
ST_2 : Operation 30 [2/2] (1.14ns)   --->   "%messageBlock_load = load i32* %messageBlock_addr, align 4" [SM3/src/SM3.c:123]   --->   Operation 30 'load' 'messageBlock_load' <Predicate = (!icmp_ln121)> <Delay = 1.14> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.14> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_2 : Operation 31 [1/1] (0.00ns)   --->   "%trunc_ln123 = trunc i5 %i_0 to i4" [SM3/src/SM3.c:123]   --->   Operation 31 'trunc' 'trunc_ln123' <Predicate = (!icmp_ln121)> <Delay = 0.00>
ST_2 : Operation 32 [1/1] (0.85ns)   --->   "br label %.preheader3" [SM3/src/SM3.c:134]   --->   Operation 32 'br' <Predicate = (icmp_ln121)> <Delay = 0.85>

State 3 <SV = 2> <Delay = 3.41>
ST_3 : Operation 33 [1/2] (1.14ns)   --->   "%messageBlock_load = load i32* %messageBlock_addr, align 4" [SM3/src/SM3.c:123]   --->   Operation 33 'load' 'messageBlock_load' <Predicate = true> <Delay = 1.14> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.14> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_3 : Operation 34 [1/1] (0.47ns)   --->   "%xor_ln123 = xor i4 %trunc_ln123, -1" [SM3/src/SM3.c:123]   --->   Operation 34 'xor' 'xor_ln123' <Predicate = true> <Delay = 0.47> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 35 [1/1] (0.00ns)   --->   "%zext_ln123_1 = zext i4 %xor_ln123 to i64" [SM3/src/SM3.c:123]   --->   Operation 35 'zext' 'zext_ln123_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 36 [1/1] (0.00ns)   --->   "%W_addr = getelementptr inbounds [68 x i32]* %W, i64 0, i64 %zext_ln123_1" [SM3/src/SM3.c:123]   --->   Operation 36 'getelementptr' 'W_addr' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 37 [1/1] (2.26ns)   --->   "store i32 %messageBlock_load, i32* %W_addr, align 4" [SM3/src/SM3.c:123]   --->   Operation 37 'store' <Predicate = true> <Delay = 2.26> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.14> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_3 : Operation 38 [1/1] (0.00ns)   --->   "br label %1" [SM3/src/SM3.c:121]   --->   Operation 38 'br' <Predicate = true> <Delay = 0.00>

State 4 <SV = 2> <Delay = 3.53>
ST_4 : Operation 39 [1/1] (0.00ns)   --->   "%i_1 = phi i7 [ %i_3, %3 ], [ 16, %.preheader3.preheader ]"   --->   Operation 39 'phi' 'i_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 40 [1/1] (0.86ns)   --->   "%icmp_ln134 = icmp eq i7 %i_1, -60" [SM3/src/SM3.c:134]   --->   Operation 40 'icmp' 'icmp_ln134' <Predicate = true> <Delay = 0.86> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.86> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 41 [1/1] (0.00ns)   --->   "%empty_12 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 52, i64 52, i64 52)"   --->   Operation 41 'speclooptripcount' 'empty_12' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 42 [1/1] (0.00ns)   --->   "br i1 %icmp_ln134, label %.preheader.preheader, label %3" [SM3/src/SM3.c:134]   --->   Operation 42 'br' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 43 [1/1] (1.27ns)   --->   "%add_ln136 = add i7 -16, %i_1" [SM3/src/SM3.c:136]   --->   Operation 43 'add' 'add_ln136' <Predicate = (!icmp_ln134)> <Delay = 1.27> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.51> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 44 [1/1] (0.00ns)   --->   "%zext_ln136 = zext i7 %add_ln136 to i64" [SM3/src/SM3.c:136]   --->   Operation 44 'zext' 'zext_ln136' <Predicate = (!icmp_ln134)> <Delay = 0.00>
ST_4 : Operation 45 [1/1] (0.00ns)   --->   "%W_addr_1 = getelementptr inbounds [68 x i32]* %W, i64 0, i64 %zext_ln136" [SM3/src/SM3.c:136]   --->   Operation 45 'getelementptr' 'W_addr_1' <Predicate = (!icmp_ln134)> <Delay = 0.00>
ST_4 : Operation 46 [2/2] (2.26ns)   --->   "%W_load = load i32* %W_addr_1, align 4" [SM3/src/SM3.c:136]   --->   Operation 46 'load' 'W_load' <Predicate = (!icmp_ln134)> <Delay = 2.26> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.14> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_4 : Operation 47 [1/1] (0.85ns)   --->   "br label %.preheader" [SM3/src/SM3.c:148]   --->   Operation 47 'br' <Predicate = (icmp_ln134)> <Delay = 0.85>

State 5 <SV = 3> <Delay = 3.53>
ST_5 : Operation 48 [1/2] (2.26ns)   --->   "%W_load = load i32* %W_addr_1, align 4" [SM3/src/SM3.c:136]   --->   Operation 48 'load' 'W_load' <Predicate = true> <Delay = 2.26> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.14> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_5 : Operation 49 [1/1] (1.27ns)   --->   "%add_ln136_1 = add i7 -9, %i_1" [SM3/src/SM3.c:136]   --->   Operation 49 'add' 'add_ln136_1' <Predicate = true> <Delay = 1.27> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.51> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 50 [1/1] (0.00ns)   --->   "%zext_ln136_1 = zext i7 %add_ln136_1 to i64" [SM3/src/SM3.c:136]   --->   Operation 50 'zext' 'zext_ln136_1' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 51 [1/1] (0.00ns)   --->   "%W_addr_2 = getelementptr inbounds [68 x i32]* %W, i64 0, i64 %zext_ln136_1" [SM3/src/SM3.c:136]   --->   Operation 51 'getelementptr' 'W_addr_2' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 52 [2/2] (2.26ns)   --->   "%W_load_1 = load i32* %W_addr_2, align 4" [SM3/src/SM3.c:136]   --->   Operation 52 'load' 'W_load_1' <Predicate = true> <Delay = 2.26> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.14> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_5 : Operation 53 [1/1] (1.27ns)   --->   "%add_ln136_2 = add i7 -3, %i_1" [SM3/src/SM3.c:136]   --->   Operation 53 'add' 'add_ln136_2' <Predicate = true> <Delay = 1.27> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.51> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 54 [1/1] (0.00ns)   --->   "%zext_ln136_2 = zext i7 %add_ln136_2 to i64" [SM3/src/SM3.c:136]   --->   Operation 54 'zext' 'zext_ln136_2' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 55 [1/1] (0.00ns)   --->   "%W_addr_3 = getelementptr inbounds [68 x i32]* %W, i64 0, i64 %zext_ln136_2" [SM3/src/SM3.c:136]   --->   Operation 55 'getelementptr' 'W_addr_3' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 56 [2/2] (2.26ns)   --->   "%W_load_2 = load i32* %W_addr_3, align 4" [SM3/src/SM3.c:136]   --->   Operation 56 'load' 'W_load_2' <Predicate = true> <Delay = 2.26> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.14> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>

State 6 <SV = 4> <Delay = 3.53>
ST_6 : Operation 57 [1/2] (2.26ns)   --->   "%W_load_1 = load i32* %W_addr_2, align 4" [SM3/src/SM3.c:136]   --->   Operation 57 'load' 'W_load_1' <Predicate = true> <Delay = 2.26> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.14> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_6 : Operation 58 [1/2] (2.26ns)   --->   "%W_load_2 = load i32* %W_addr_3, align 4" [SM3/src/SM3.c:136]   --->   Operation 58 'load' 'W_load_2' <Predicate = true> <Delay = 2.26> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.14> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_6 : Operation 59 [1/1] (0.00ns) (grouped into LUT with out node xor_ln136_1)   --->   "%trunc_ln12 = trunc i32 %W_load_2 to i17" [SM3/src/SM3.c:12->SM3/src/SM3.c:136]   --->   Operation 59 'trunc' 'trunc_ln12' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 60 [1/1] (0.00ns) (grouped into LUT with out node xor_ln136_1)   --->   "%lshr_ln12_4 = call i15 @_ssdm_op_PartSelect.i15.i32.i32.i32(i32 %W_load_2, i32 17, i32 31)" [SM3/src/SM3.c:12->SM3/src/SM3.c:136]   --->   Operation 60 'partselect' 'lshr_ln12_4' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 61 [1/1] (0.00ns) (grouped into LUT with out node xor_ln136_1)   --->   "%or_ln12_4 = call i32 @_ssdm_op_BitConcatenate.i32.i17.i15(i17 %trunc_ln12, i15 %lshr_ln12_4)" [SM3/src/SM3.c:12->SM3/src/SM3.c:136]   --->   Operation 61 'bitconcatenate' 'or_ln12_4' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 62 [1/1] (0.00ns) (grouped into LUT with out node xor_ln136_1)   --->   "%xor_ln136 = xor i32 %W_load, %or_ln12_4" [SM3/src/SM3.c:136]   --->   Operation 62 'xor' 'xor_ln136' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 63 [1/1] (0.52ns) (out node of the LUT)   --->   "%xor_ln136_1 = xor i32 %xor_ln136, %W_load_1" [SM3/src/SM3.c:136]   --->   Operation 63 'xor' 'xor_ln136_1' <Predicate = true> <Delay = 0.52> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 64 [1/1] (1.27ns)   --->   "%add_ln137 = add i7 -13, %i_1" [SM3/src/SM3.c:137]   --->   Operation 64 'add' 'add_ln137' <Predicate = true> <Delay = 1.27> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.51> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 65 [1/1] (0.00ns)   --->   "%zext_ln137_1 = zext i7 %add_ln137 to i64" [SM3/src/SM3.c:137]   --->   Operation 65 'zext' 'zext_ln137_1' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 66 [1/1] (0.00ns)   --->   "%W_addr_4 = getelementptr inbounds [68 x i32]* %W, i64 0, i64 %zext_ln137_1" [SM3/src/SM3.c:137]   --->   Operation 66 'getelementptr' 'W_addr_4' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 67 [2/2] (2.26ns)   --->   "%W_load_3 = load i32* %W_addr_4, align 4" [SM3/src/SM3.c:137]   --->   Operation 67 'load' 'W_load_3' <Predicate = true> <Delay = 2.26> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.14> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_6 : Operation 68 [1/1] (1.27ns)   --->   "%add_ln137_1 = add i7 -6, %i_1" [SM3/src/SM3.c:137]   --->   Operation 68 'add' 'add_ln137_1' <Predicate = true> <Delay = 1.27> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.51> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 69 [1/1] (0.00ns)   --->   "%zext_ln137_2 = zext i7 %add_ln137_1 to i64" [SM3/src/SM3.c:137]   --->   Operation 69 'zext' 'zext_ln137_2' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 70 [1/1] (0.00ns)   --->   "%W_addr_5 = getelementptr inbounds [68 x i32]* %W, i64 0, i64 %zext_ln137_2" [SM3/src/SM3.c:137]   --->   Operation 70 'getelementptr' 'W_addr_5' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 71 [2/2] (2.26ns)   --->   "%W_load_4 = load i32* %W_addr_5, align 4" [SM3/src/SM3.c:137]   --->   Operation 71 'load' 'W_load_4' <Predicate = true> <Delay = 2.26> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.14> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>

State 7 <SV = 5> <Delay = 5.05>
ST_7 : Operation 72 [1/1] (0.00ns) (grouped into LUT with out node xor_ln137_1)   --->   "%trunc_ln12_1 = trunc i32 %xor_ln136_1 to i17" [SM3/src/SM3.c:12->SM3/src/SM3.c:85->SM3/src/SM3.c:136]   --->   Operation 72 'trunc' 'trunc_ln12_1' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 73 [1/1] (0.00ns) (grouped into LUT with out node xor_ln137_1)   --->   "%lshr_ln = call i15 @_ssdm_op_PartSelect.i15.i32.i32.i32(i32 %xor_ln136_1, i32 17, i32 31)" [SM3/src/SM3.c:12->SM3/src/SM3.c:85->SM3/src/SM3.c:136]   --->   Operation 73 'partselect' 'lshr_ln' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 74 [1/1] (0.00ns) (grouped into LUT with out node xor_ln137_1)   --->   "%or_ln = call i32 @_ssdm_op_BitConcatenate.i32.i17.i15(i17 %trunc_ln12_1, i15 %lshr_ln)" [SM3/src/SM3.c:12->SM3/src/SM3.c:85->SM3/src/SM3.c:136]   --->   Operation 74 'bitconcatenate' 'or_ln' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 75 [1/1] (0.00ns) (grouped into LUT with out node xor_ln137_1)   --->   "%trunc_ln12_2 = trunc i32 %xor_ln136_1 to i9" [SM3/src/SM3.c:12->SM3/src/SM3.c:85->SM3/src/SM3.c:136]   --->   Operation 75 'trunc' 'trunc_ln12_2' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 76 [1/1] (0.00ns) (grouped into LUT with out node xor_ln137_1)   --->   "%lshr_ln12_1 = call i23 @_ssdm_op_PartSelect.i23.i32.i32.i32(i32 %xor_ln136_1, i32 9, i32 31)" [SM3/src/SM3.c:12->SM3/src/SM3.c:85->SM3/src/SM3.c:136]   --->   Operation 76 'partselect' 'lshr_ln12_1' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 77 [1/1] (0.00ns) (grouped into LUT with out node xor_ln137_1)   --->   "%or_ln12_1 = call i32 @_ssdm_op_BitConcatenate.i32.i9.i23(i9 %trunc_ln12_2, i23 %lshr_ln12_1)" [SM3/src/SM3.c:12->SM3/src/SM3.c:85->SM3/src/SM3.c:136]   --->   Operation 77 'bitconcatenate' 'or_ln12_1' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 78 [1/2] (2.26ns)   --->   "%W_load_3 = load i32* %W_addr_4, align 4" [SM3/src/SM3.c:137]   --->   Operation 78 'load' 'W_load_3' <Predicate = true> <Delay = 2.26> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.14> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_7 : Operation 79 [1/1] (0.00ns) (grouped into LUT with out node xor_ln137_1)   --->   "%trunc_ln12_3 = trunc i32 %W_load_3 to i25" [SM3/src/SM3.c:12->SM3/src/SM3.c:137]   --->   Operation 79 'trunc' 'trunc_ln12_3' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 80 [1/1] (0.00ns) (grouped into LUT with out node xor_ln137_1)   --->   "%lshr_ln12_5 = call i7 @_ssdm_op_PartSelect.i7.i32.i32.i32(i32 %W_load_3, i32 25, i32 31)" [SM3/src/SM3.c:12->SM3/src/SM3.c:137]   --->   Operation 80 'partselect' 'lshr_ln12_5' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 81 [1/1] (0.00ns) (grouped into LUT with out node xor_ln137_1)   --->   "%or_ln12_5 = call i32 @_ssdm_op_BitConcatenate.i32.i25.i7(i25 %trunc_ln12_3, i7 %lshr_ln12_5)" [SM3/src/SM3.c:12->SM3/src/SM3.c:137]   --->   Operation 81 'bitconcatenate' 'or_ln12_5' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 82 [1/2] (2.26ns)   --->   "%W_load_4 = load i32* %W_addr_5, align 4" [SM3/src/SM3.c:137]   --->   Operation 82 'load' 'W_load_4' <Predicate = true> <Delay = 2.26> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.14> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_7 : Operation 83 [1/1] (0.00ns) (grouped into LUT with out node xor_ln137_1)   --->   "%xor_ln137 = xor i32 %W_load_4, %or_ln" [SM3/src/SM3.c:137]   --->   Operation 83 'xor' 'xor_ln137' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 84 [1/1] (0.00ns) (grouped into LUT with out node xor_ln137_1)   --->   "%xor_ln137_2 = xor i32 %or_ln12_1, %or_ln12_5" [SM3/src/SM3.c:137]   --->   Operation 84 'xor' 'xor_ln137_2' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 85 [1/1] (0.00ns) (grouped into LUT with out node xor_ln137_1)   --->   "%xor_ln137_3 = xor i32 %xor_ln137_2, %xor_ln136_1" [SM3/src/SM3.c:137]   --->   Operation 85 'xor' 'xor_ln137_3' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 86 [1/1] (0.52ns) (out node of the LUT)   --->   "%xor_ln137_1 = xor i32 %xor_ln137_3, %xor_ln137" [SM3/src/SM3.c:137]   --->   Operation 86 'xor' 'xor_ln137_1' <Predicate = true> <Delay = 0.52> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 87 [1/1] (0.00ns)   --->   "%zext_ln137 = zext i7 %i_1 to i64" [SM3/src/SM3.c:137]   --->   Operation 87 'zext' 'zext_ln137' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 88 [1/1] (0.00ns)   --->   "%W_addr_6 = getelementptr inbounds [68 x i32]* %W, i64 0, i64 %zext_ln137" [SM3/src/SM3.c:137]   --->   Operation 88 'getelementptr' 'W_addr_6' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 89 [1/1] (2.26ns)   --->   "store i32 %xor_ln137_1, i32* %W_addr_6, align 4" [SM3/src/SM3.c:137]   --->   Operation 89 'store' <Predicate = true> <Delay = 2.26> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.14> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_7 : Operation 90 [1/1] (1.27ns)   --->   "%i_3 = add i7 1, %i_1" [SM3/src/SM3.c:134]   --->   Operation 90 'add' 'i_3' <Predicate = true> <Delay = 1.27> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.51> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 91 [1/1] (0.00ns)   --->   "br label %.preheader3" [SM3/src/SM3.c:134]   --->   Operation 91 'br' <Predicate = true> <Delay = 0.00>

State 8 <SV = 3> <Delay = 3.53>
ST_8 : Operation 92 [1/1] (0.00ns)   --->   "%i_2 = phi i7 [ %i_4, %4 ], [ 0, %.preheader.preheader ]"   --->   Operation 92 'phi' 'i_2' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 93 [1/1] (0.86ns)   --->   "%icmp_ln148 = icmp eq i7 %i_2, -64" [SM3/src/SM3.c:148]   --->   Operation 93 'icmp' 'icmp_ln148' <Predicate = true> <Delay = 0.86> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.86> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 94 [1/1] (0.00ns)   --->   "%empty_13 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 64, i64 64, i64 64)"   --->   Operation 94 'speclooptripcount' 'empty_13' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 95 [1/1] (1.27ns)   --->   "%i_4 = add i7 %i_2, 1" [SM3/src/SM3.c:148]   --->   Operation 95 'add' 'i_4' <Predicate = true> <Delay = 1.27> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.51> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 96 [1/1] (0.00ns)   --->   "br i1 %icmp_ln148, label %5, label %4" [SM3/src/SM3.c:148]   --->   Operation 96 'br' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 97 [1/1] (0.00ns)   --->   "%zext_ln150 = zext i7 %i_2 to i64" [SM3/src/SM3.c:150]   --->   Operation 97 'zext' 'zext_ln150' <Predicate = (!icmp_ln148)> <Delay = 0.00>
ST_8 : Operation 98 [1/1] (0.00ns)   --->   "%W_addr_7 = getelementptr inbounds [68 x i32]* %W, i64 0, i64 %zext_ln150" [SM3/src/SM3.c:150]   --->   Operation 98 'getelementptr' 'W_addr_7' <Predicate = (!icmp_ln148)> <Delay = 0.00>
ST_8 : Operation 99 [2/2] (2.26ns)   --->   "%W_load_5 = load i32* %W_addr_7, align 4" [SM3/src/SM3.c:150]   --->   Operation 99 'load' 'W_load_5' <Predicate = (!icmp_ln148)> <Delay = 2.26> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.14> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_8 : Operation 100 [1/1] (1.27ns)   --->   "%add_ln150 = add i7 %i_2, 4" [SM3/src/SM3.c:150]   --->   Operation 100 'add' 'add_ln150' <Predicate = (!icmp_ln148)> <Delay = 1.27> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.51> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 101 [1/1] (0.00ns)   --->   "%zext_ln150_1 = zext i7 %add_ln150 to i64" [SM3/src/SM3.c:150]   --->   Operation 101 'zext' 'zext_ln150_1' <Predicate = (!icmp_ln148)> <Delay = 0.00>
ST_8 : Operation 102 [1/1] (0.00ns)   --->   "%W_addr_8 = getelementptr inbounds [68 x i32]* %W, i64 0, i64 %zext_ln150_1" [SM3/src/SM3.c:150]   --->   Operation 102 'getelementptr' 'W_addr_8' <Predicate = (!icmp_ln148)> <Delay = 0.00>
ST_8 : Operation 103 [2/2] (2.26ns)   --->   "%W_load_6 = load i32* %W_addr_8, align 4" [SM3/src/SM3.c:150]   --->   Operation 103 'load' 'W_load_6' <Predicate = (!icmp_ln148)> <Delay = 2.26> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.14> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_8 : Operation 104 [2/2] (1.14ns)   --->   "%A = load i32* %intermediateHash_add, align 4" [SM3/src/SM3.c:157]   --->   Operation 104 'load' 'A' <Predicate = (icmp_ln148)> <Delay = 1.14> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.14> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_8 : Operation 105 [1/1] (0.00ns)   --->   "%intermediateHash_add_1 = getelementptr [8 x i32]* %intermediateHash, i64 0, i64 1" [SM3/src/SM3.c:158]   --->   Operation 105 'getelementptr' 'intermediateHash_add_1' <Predicate = (icmp_ln148)> <Delay = 0.00>
ST_8 : Operation 106 [2/2] (1.14ns)   --->   "%B = load i32* %intermediateHash_add_1, align 4" [SM3/src/SM3.c:158]   --->   Operation 106 'load' 'B' <Predicate = (icmp_ln148)> <Delay = 1.14> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.14> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>

State 9 <SV = 4> <Delay = 5.05>
ST_9 : Operation 107 [1/2] (2.26ns)   --->   "%W_load_5 = load i32* %W_addr_7, align 4" [SM3/src/SM3.c:150]   --->   Operation 107 'load' 'W_load_5' <Predicate = true> <Delay = 2.26> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.14> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_9 : Operation 108 [1/2] (2.26ns)   --->   "%W_load_6 = load i32* %W_addr_8, align 4" [SM3/src/SM3.c:150]   --->   Operation 108 'load' 'W_load_6' <Predicate = true> <Delay = 2.26> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.14> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_9 : Operation 109 [1/1] (0.52ns)   --->   "%xor_ln150 = xor i32 %W_load_6, %W_load_5" [SM3/src/SM3.c:150]   --->   Operation 109 'xor' 'xor_ln150' <Predicate = true> <Delay = 0.52> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 110 [1/1] (0.00ns)   --->   "%W_addr_14 = getelementptr inbounds [64 x i32]* %W_s, i64 0, i64 %zext_ln150" [SM3/src/SM3.c:150]   --->   Operation 110 'getelementptr' 'W_addr_14' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 111 [1/1] (2.26ns)   --->   "store i32 %xor_ln150, i32* %W_addr_14, align 4" [SM3/src/SM3.c:150]   --->   Operation 111 'store' <Predicate = true> <Delay = 2.26> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.14> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_9 : Operation 112 [1/1] (0.00ns)   --->   "br label %.preheader" [SM3/src/SM3.c:148]   --->   Operation 112 'br' <Predicate = true> <Delay = 0.00>

State 10 <SV = 4> <Delay = 1.14>
ST_10 : Operation 113 [1/2] (1.14ns)   --->   "%A = load i32* %intermediateHash_add, align 4" [SM3/src/SM3.c:157]   --->   Operation 113 'load' 'A' <Predicate = true> <Delay = 1.14> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.14> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_10 : Operation 114 [1/2] (1.14ns)   --->   "%B = load i32* %intermediateHash_add_1, align 4" [SM3/src/SM3.c:158]   --->   Operation 114 'load' 'B' <Predicate = true> <Delay = 1.14> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.14> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_10 : Operation 115 [1/1] (0.00ns)   --->   "%intermediateHash_add_2 = getelementptr [8 x i32]* %intermediateHash, i64 0, i64 2" [SM3/src/SM3.c:159]   --->   Operation 115 'getelementptr' 'intermediateHash_add_2' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 116 [2/2] (1.14ns)   --->   "%C = load i32* %intermediateHash_add_2, align 4" [SM3/src/SM3.c:159]   --->   Operation 116 'load' 'C' <Predicate = true> <Delay = 1.14> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.14> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_10 : Operation 117 [1/1] (0.00ns)   --->   "%intermediateHash_add_3 = getelementptr [8 x i32]* %intermediateHash, i64 0, i64 3" [SM3/src/SM3.c:160]   --->   Operation 117 'getelementptr' 'intermediateHash_add_3' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 118 [2/2] (1.14ns)   --->   "%D = load i32* %intermediateHash_add_3, align 4" [SM3/src/SM3.c:160]   --->   Operation 118 'load' 'D' <Predicate = true> <Delay = 1.14> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.14> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>

State 11 <SV = 5> <Delay = 1.14>
ST_11 : Operation 119 [1/2] (1.14ns)   --->   "%C = load i32* %intermediateHash_add_2, align 4" [SM3/src/SM3.c:159]   --->   Operation 119 'load' 'C' <Predicate = true> <Delay = 1.14> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.14> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_11 : Operation 120 [1/2] (1.14ns)   --->   "%D = load i32* %intermediateHash_add_3, align 4" [SM3/src/SM3.c:160]   --->   Operation 120 'load' 'D' <Predicate = true> <Delay = 1.14> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.14> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_11 : Operation 121 [1/1] (0.00ns)   --->   "%intermediateHash_add_4 = getelementptr [8 x i32]* %intermediateHash, i64 0, i64 4" [SM3/src/SM3.c:161]   --->   Operation 121 'getelementptr' 'intermediateHash_add_4' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 122 [2/2] (1.14ns)   --->   "%E = load i32* %intermediateHash_add_4, align 4" [SM3/src/SM3.c:161]   --->   Operation 122 'load' 'E' <Predicate = true> <Delay = 1.14> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.14> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_11 : Operation 123 [1/1] (0.00ns)   --->   "%intermediateHash_add_5 = getelementptr [8 x i32]* %intermediateHash, i64 0, i64 5" [SM3/src/SM3.c:162]   --->   Operation 123 'getelementptr' 'intermediateHash_add_5' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 124 [2/2] (1.14ns)   --->   "%F = load i32* %intermediateHash_add_5, align 4" [SM3/src/SM3.c:162]   --->   Operation 124 'load' 'F' <Predicate = true> <Delay = 1.14> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.14> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>

State 12 <SV = 6> <Delay = 1.14>
ST_12 : Operation 125 [1/2] (1.14ns)   --->   "%E = load i32* %intermediateHash_add_4, align 4" [SM3/src/SM3.c:161]   --->   Operation 125 'load' 'E' <Predicate = true> <Delay = 1.14> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.14> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_12 : Operation 126 [1/2] (1.14ns)   --->   "%F = load i32* %intermediateHash_add_5, align 4" [SM3/src/SM3.c:162]   --->   Operation 126 'load' 'F' <Predicate = true> <Delay = 1.14> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.14> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_12 : Operation 127 [1/1] (0.00ns)   --->   "%intermediateHash_add_6 = getelementptr [8 x i32]* %intermediateHash, i64 0, i64 6" [SM3/src/SM3.c:163]   --->   Operation 127 'getelementptr' 'intermediateHash_add_6' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 128 [2/2] (1.14ns)   --->   "%G = load i32* %intermediateHash_add_6, align 4" [SM3/src/SM3.c:163]   --->   Operation 128 'load' 'G' <Predicate = true> <Delay = 1.14> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.14> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_12 : Operation 129 [1/1] (0.00ns)   --->   "%intermediateHash_add_7 = getelementptr [8 x i32]* %intermediateHash, i64 0, i64 7" [SM3/src/SM3.c:164]   --->   Operation 129 'getelementptr' 'intermediateHash_add_7' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 130 [2/2] (1.14ns)   --->   "%H = load i32* %intermediateHash_add_7, align 4" [SM3/src/SM3.c:164]   --->   Operation 130 'load' 'H' <Predicate = true> <Delay = 1.14> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.14> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>

State 13 <SV = 7> <Delay = 1.14>
ST_13 : Operation 131 [1/2] (1.14ns)   --->   "%G = load i32* %intermediateHash_add_6, align 4" [SM3/src/SM3.c:163]   --->   Operation 131 'load' 'G' <Predicate = true> <Delay = 1.14> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.14> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_13 : Operation 132 [1/2] (1.14ns)   --->   "%H = load i32* %intermediateHash_add_7, align 4" [SM3/src/SM3.c:164]   --->   Operation 132 'load' 'H' <Predicate = true> <Delay = 1.14> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.14> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_13 : Operation 133 [1/1] (0.85ns)   --->   "br label %6" [SM3/src/SM3.c:167]   --->   Operation 133 'br' <Predicate = true> <Delay = 0.85>

State 14 <SV = 8> <Delay = 7.19>
ST_14 : Operation 134 [1/1] (0.00ns)   --->   "%Y_assign_2 = phi i32 [ %F, %5 ], [ %F_1, %T.exit_ifconv ]"   --->   Operation 134 'phi' 'Y_assign_2' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 135 [1/1] (0.00ns)   --->   "%F_1 = phi i32 [ %E, %5 ], [ %E_1, %T.exit_ifconv ]"   --->   Operation 135 'phi' 'F_1' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 136 [1/1] (0.00ns)   --->   "%D_0 = phi i32 [ %D, %5 ], [ %D_1, %T.exit_ifconv ]"   --->   Operation 136 'phi' 'D_0' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 137 [1/1] (0.00ns)   --->   "%D_1 = phi i32 [ %C, %5 ], [ %C_1, %T.exit_ifconv ]"   --->   Operation 137 'phi' 'D_1' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 138 [1/1] (0.00ns)   --->   "%Y_assign = phi i32 [ %B, %5 ], [ %B_1, %T.exit_ifconv ]"   --->   Operation 138 'phi' 'Y_assign' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 139 [1/1] (0.00ns)   --->   "%B_1 = phi i32 [ %A, %5 ], [ %TT1, %T.exit_ifconv ]"   --->   Operation 139 'phi' 'B_1' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 140 [1/1] (0.00ns)   --->   "%i_assign = phi i7 [ 0, %5 ], [ %i_5, %T.exit_ifconv ]"   --->   Operation 140 'phi' 'i_assign' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 141 [1/1] (0.00ns)   --->   "%H_1 = phi i32 [ %G, %5 ], [ %G_1, %T.exit_ifconv ]"   --->   Operation 141 'phi' 'H_1' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 142 [1/1] (0.00ns)   --->   "%H_0 = phi i32 [ %H, %5 ], [ %H_1, %T.exit_ifconv ]"   --->   Operation 142 'phi' 'H_0' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 143 [1/1] (0.86ns)   --->   "%icmp_ln167 = icmp eq i7 %i_assign, -64" [SM3/src/SM3.c:167]   --->   Operation 143 'icmp' 'icmp_ln167' <Predicate = true> <Delay = 0.86> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.86> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 144 [1/1] (0.00ns)   --->   "%empty_15 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 64, i64 64, i64 64)"   --->   Operation 144 'speclooptripcount' 'empty_15' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 145 [1/1] (1.27ns)   --->   "%i_5 = add i7 %i_assign, 1" [SM3/src/SM3.c:167]   --->   Operation 145 'add' 'i_5' <Predicate = true> <Delay = 1.27> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.51> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 146 [1/1] (0.00ns)   --->   "br i1 %icmp_ln167, label %7, label %T.exit_ifconv" [SM3/src/SM3.c:167]   --->   Operation 146 'br' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 147 [1/1] (0.00ns)   --->   "%tmp = call i3 @_ssdm_op_PartSelect.i3.i7.i32.i32(i7 %i_assign, i32 4, i32 6)" [SM3/src/SM3.c:28->SM3/src/SM3.c:172]   --->   Operation 147 'partselect' 'tmp' <Predicate = (!icmp_ln167)> <Delay = 0.00>
ST_14 : Operation 148 [1/1] (0.67ns)   --->   "%icmp_ln28 = icmp eq i3 %tmp, 0" [SM3/src/SM3.c:28->SM3/src/SM3.c:172]   --->   Operation 148 'icmp' 'icmp_ln28' <Predicate = (!icmp_ln167)> <Delay = 0.67> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.86> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 149 [1/1] (0.80ns)   --->   "%select_ln28 = select i1 %icmp_ln28, i31 -104053479, i31 -91775606" [SM3/src/SM3.c:28->SM3/src/SM3.c:172]   --->   Operation 149 'select' 'select_ln28' <Predicate = (!icmp_ln167)> <Delay = 0.80> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.87> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_14 : Operation 150 [1/1] (0.87ns)   --->   "%select_ln28_1 = select i1 %icmp_ln28, i32 2043430169, i32 2055708042" [SM3/src/SM3.c:28->SM3/src/SM3.c:172]   --->   Operation 150 'select' 'select_ln28_1' <Predicate = (!icmp_ln167)> <Delay = 0.87> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.87> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_14 : Operation 151 [1/1] (0.00ns)   --->   "%trunc_ln172 = trunc i7 %i_assign to i6" [SM3/src/SM3.c:172]   --->   Operation 151 'trunc' 'trunc_ln172' <Predicate = (!icmp_ln167)> <Delay = 0.00>
ST_14 : Operation 152 [1/1] (0.86ns)   --->   "%icmp_ln11 = icmp ult i6 %trunc_ln172, -31" [SM3/src/SM3.c:11->SM3/src/SM3.c:172]   --->   Operation 152 'icmp' 'icmp_ln11' <Predicate = (!icmp_ln167)> <Delay = 0.86> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.86> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 153 [1/1] (0.00ns)   --->   "%zext_ln12 = zext i6 %trunc_ln172 to i32" [SM3/src/SM3.c:12->SM3/src/SM3.c:172]   --->   Operation 153 'zext' 'zext_ln12' <Predicate = (!icmp_ln167)> <Delay = 0.00>
ST_14 : Operation 154 [1/1] (0.00ns)   --->   "%zext_ln12_1 = zext i6 %trunc_ln172 to i7" [SM3/src/SM3.c:12->SM3/src/SM3.c:172]   --->   Operation 154 'zext' 'zext_ln12_1' <Predicate = (!icmp_ln167)> <Delay = 0.00>
ST_14 : Operation 155 [1/1] (1.89ns)   --->   "%shl_ln12 = shl i32 %select_ln28_1, %zext_ln12" [SM3/src/SM3.c:12->SM3/src/SM3.c:172]   --->   Operation 155 'shl' 'shl_ln12' <Predicate = (!icmp_ln167)> <Delay = 1.89> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 1.87> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 156 [1/1] (1.27ns)   --->   "%sub_ln12 = sub i7 32, %zext_ln12_1" [SM3/src/SM3.c:12->SM3/src/SM3.c:172]   --->   Operation 156 'sub' 'sub_ln12' <Predicate = (!icmp_ln167)> <Delay = 1.27> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.51> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 157 [1/1] (0.00ns) (grouped into LUT with out node select_ln11)   --->   "%sext_ln12 = sext i7 %sub_ln12 to i31" [SM3/src/SM3.c:12->SM3/src/SM3.c:172]   --->   Operation 157 'sext' 'sext_ln12' <Predicate = (!icmp_ln167)> <Delay = 0.00>
ST_14 : Operation 158 [1/1] (0.00ns) (grouped into LUT with out node select_ln11)   --->   "%lshr_ln12 = lshr i31 %select_ln28, %sext_ln12" [SM3/src/SM3.c:12->SM3/src/SM3.c:172]   --->   Operation 158 'lshr' 'lshr_ln12' <Predicate = (!icmp_ln167)> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 1.87> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 159 [1/1] (0.00ns) (grouped into LUT with out node select_ln11)   --->   "%trunc_ln12_5 = trunc i32 %shl_ln12 to i31" [SM3/src/SM3.c:12->SM3/src/SM3.c:172]   --->   Operation 159 'trunc' 'trunc_ln12_5' <Predicate = (!icmp_ln167)> <Delay = 0.00>
ST_14 : Operation 160 [1/1] (0.00ns) (grouped into LUT with out node select_ln11)   --->   "%or_ln12 = or i31 %trunc_ln12_5, %lshr_ln12" [SM3/src/SM3.c:12->SM3/src/SM3.c:172]   --->   Operation 160 'or' 'or_ln12' <Predicate = (!icmp_ln167)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 161 [1/1] (0.00ns) (grouped into LUT with out node select_ln11)   --->   "%tmp_1 = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %shl_ln12, i32 31)" [SM3/src/SM3.c:12->SM3/src/SM3.c:172]   --->   Operation 161 'bitselect' 'tmp_1' <Predicate = (!icmp_ln167)> <Delay = 0.00>
ST_14 : Operation 162 [1/1] (0.00ns) (grouped into LUT with out node select_ln11)   --->   "%or_ln12_i = call i32 @_ssdm_op_BitConcatenate.i32.i1.i31(i1 %tmp_1, i31 %or_ln12)" [SM3/src/SM3.c:12->SM3/src/SM3.c:172]   --->   Operation 162 'bitconcatenate' 'or_ln12_i' <Predicate = (!icmp_ln167)> <Delay = 0.00>
ST_14 : Operation 163 [1/1] (0.00ns) (grouped into LUT with out node shl_ln14)   --->   "%xor_ln14 = xor i6 %trunc_ln172, -32" [SM3/src/SM3.c:14->SM3/src/SM3.c:172]   --->   Operation 163 'xor' 'xor_ln14' <Predicate = (!icmp_ln167)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 164 [1/1] (0.00ns) (grouped into LUT with out node shl_ln14)   --->   "%sext_ln14 = sext i6 %xor_ln14 to i32" [SM3/src/SM3.c:14->SM3/src/SM3.c:172]   --->   Operation 164 'sext' 'sext_ln14' <Predicate = (!icmp_ln167)> <Delay = 0.00>
ST_14 : Operation 165 [1/1] (1.89ns) (out node of the LUT)   --->   "%shl_ln14 = shl i32 %select_ln28_1, %sext_ln14" [SM3/src/SM3.c:14->SM3/src/SM3.c:172]   --->   Operation 165 'shl' 'shl_ln14' <Predicate = (!icmp_ln167)> <Delay = 1.89> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 1.87> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 166 [1/1] (1.27ns)   --->   "%sub_ln14 = sub i7 -64, %zext_ln12_1" [SM3/src/SM3.c:14->SM3/src/SM3.c:172]   --->   Operation 166 'sub' 'sub_ln14' <Predicate = (!icmp_ln167)> <Delay = 1.27> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.51> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 167 [1/1] (0.00ns) (grouped into LUT with out node or_ln14_i)   --->   "%zext_ln14 = zext i7 %sub_ln14 to i31" [SM3/src/SM3.c:14->SM3/src/SM3.c:172]   --->   Operation 167 'zext' 'zext_ln14' <Predicate = (!icmp_ln167)> <Delay = 0.00>
ST_14 : Operation 168 [1/1] (0.00ns) (grouped into LUT with out node or_ln14_i)   --->   "%lshr_ln14 = lshr i31 %select_ln28, %zext_ln14" [SM3/src/SM3.c:14->SM3/src/SM3.c:172]   --->   Operation 168 'lshr' 'lshr_ln14' <Predicate = (!icmp_ln167)> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 1.87> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 169 [1/1] (0.00ns) (grouped into LUT with out node or_ln14_i)   --->   "%trunc_ln14 = trunc i32 %shl_ln14 to i31" [SM3/src/SM3.c:14->SM3/src/SM3.c:172]   --->   Operation 169 'trunc' 'trunc_ln14' <Predicate = (!icmp_ln167)> <Delay = 0.00>
ST_14 : Operation 170 [1/1] (0.00ns) (grouped into LUT with out node or_ln14_i)   --->   "%or_ln14 = or i31 %trunc_ln14, %lshr_ln14" [SM3/src/SM3.c:14->SM3/src/SM3.c:172]   --->   Operation 170 'or' 'or_ln14' <Predicate = (!icmp_ln167)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 171 [1/1] (0.00ns) (grouped into LUT with out node or_ln14_i)   --->   "%tmp_2 = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %shl_ln14, i32 31)" [SM3/src/SM3.c:14->SM3/src/SM3.c:172]   --->   Operation 171 'bitselect' 'tmp_2' <Predicate = (!icmp_ln167)> <Delay = 0.00>
ST_14 : Operation 172 [1/1] (1.87ns) (out node of the LUT)   --->   "%or_ln14_i = call i32 @_ssdm_op_BitConcatenate.i32.i1.i31(i1 %tmp_2, i31 %or_ln14)" [SM3/src/SM3.c:14->SM3/src/SM3.c:172]   --->   Operation 172 'bitconcatenate' 'or_ln14_i' <Predicate = (!icmp_ln167)> <Delay = 1.87>
ST_14 : Operation 173 [1/1] (1.87ns) (out node of the LUT)   --->   "%select_ln11 = select i1 %icmp_ln11, i32 %or_ln12_i, i32 %or_ln14_i" [SM3/src/SM3.c:11->SM3/src/SM3.c:172]   --->   Operation 173 'select' 'select_ln11' <Predicate = (!icmp_ln167)> <Delay = 1.87> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.87> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_14 : Operation 174 [1/1] (0.00ns)   --->   "%zext_ln174 = zext i7 %i_assign to i64" [SM3/src/SM3.c:174]   --->   Operation 174 'zext' 'zext_ln174' <Predicate = (!icmp_ln167)> <Delay = 0.00>
ST_14 : Operation 175 [1/1] (0.00ns)   --->   "%W_addr_1_16 = getelementptr inbounds [64 x i32]* %W_s, i64 0, i64 %zext_ln174" [SM3/src/SM3.c:174]   --->   Operation 175 'getelementptr' 'W_addr_1_16' <Predicate = (!icmp_ln167)> <Delay = 0.00>
ST_14 : Operation 176 [2/2] (2.26ns)   --->   "%W_load_17 = load i32* %W_addr_1_16, align 4" [SM3/src/SM3.c:174]   --->   Operation 176 'load' 'W_load_17' <Predicate = (!icmp_ln167)> <Delay = 2.26> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.14> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_14 : Operation 177 [1/1] (0.00ns) (grouped into LUT with out node select_ln28_3)   --->   "%xor_ln61 = xor i32 %F_1, %H_1" [SM3/src/SM3.c:61->SM3/src/SM3.c:175]   --->   Operation 177 'xor' 'xor_ln61' <Predicate = (!icmp_ln167)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 178 [1/1] (0.00ns) (grouped into LUT with out node select_ln28_3)   --->   "%xor_ln61_1 = xor i32 %xor_ln61, %Y_assign_2" [SM3/src/SM3.c:61->SM3/src/SM3.c:175]   --->   Operation 178 'xor' 'xor_ln61_1' <Predicate = (!icmp_ln167)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 179 [1/1] (0.00ns) (grouped into LUT with out node or_ln63)   --->   "%and_ln63 = and i32 %Y_assign_2, %F_1" [SM3/src/SM3.c:63->SM3/src/SM3.c:175]   --->   Operation 179 'and' 'and_ln63' <Predicate = (!icmp_ln167)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 180 [1/1] (0.00ns) (grouped into LUT with out node or_ln63)   --->   "%xor_ln63 = xor i32 %F_1, -1" [SM3/src/SM3.c:63->SM3/src/SM3.c:175]   --->   Operation 180 'xor' 'xor_ln63' <Predicate = (!icmp_ln167)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 181 [1/1] (0.00ns) (grouped into LUT with out node or_ln63)   --->   "%and_ln63_1 = and i32 %H_1, %xor_ln63" [SM3/src/SM3.c:63->SM3/src/SM3.c:175]   --->   Operation 181 'and' 'and_ln63_1' <Predicate = (!icmp_ln167)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 182 [1/1] (0.52ns) (out node of the LUT)   --->   "%or_ln63 = or i32 %and_ln63_1, %and_ln63" [SM3/src/SM3.c:63->SM3/src/SM3.c:175]   --->   Operation 182 'or' 'or_ln63' <Predicate = (!icmp_ln167)> <Delay = 0.52> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 183 [1/1] (0.87ns) (out node of the LUT)   --->   "%select_ln28_3 = select i1 %icmp_ln28, i32 %xor_ln61_1, i32 %or_ln63" [SM3/src/SM3.c:28->SM3/src/SM3.c:172]   --->   Operation 183 'select' 'select_ln28_3' <Predicate = (!icmp_ln167)> <Delay = 0.87> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.87> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_14 : Operation 184 [1/1] (0.00ns)   --->   "%W_addr_9 = getelementptr inbounds [68 x i32]* %W, i64 0, i64 %zext_ln174" [SM3/src/SM3.c:175]   --->   Operation 184 'getelementptr' 'W_addr_9' <Predicate = (!icmp_ln167)> <Delay = 0.00>
ST_14 : Operation 185 [2/2] (2.26ns)   --->   "%W_load_7 = load i32* %W_addr_9, align 4" [SM3/src/SM3.c:175]   --->   Operation 185 'load' 'W_load_7' <Predicate = (!icmp_ln167)> <Delay = 2.26> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.14> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_14 : Operation 186 [1/1] (0.00ns)   --->   "%trunc_ln12_8 = trunc i32 %Y_assign_2 to i13" [SM3/src/SM3.c:12->SM3/src/SM3.c:182]   --->   Operation 186 'trunc' 'trunc_ln12_8' <Predicate = (!icmp_ln167)> <Delay = 0.00>
ST_14 : Operation 187 [1/1] (0.00ns)   --->   "%lshr_ln12_s = call i19 @_ssdm_op_PartSelect.i19.i32.i32.i32(i32 %Y_assign_2, i32 13, i32 31)" [SM3/src/SM3.c:12->SM3/src/SM3.c:182]   --->   Operation 187 'partselect' 'lshr_ln12_s' <Predicate = (!icmp_ln167)> <Delay = 0.00>
ST_14 : Operation 188 [1/1] (0.00ns)   --->   "%G_1 = call i32 @_ssdm_op_BitConcatenate.i32.i13.i19(i13 %trunc_ln12_8, i19 %lshr_ln12_s)" [SM3/src/SM3.c:12->SM3/src/SM3.c:182]   --->   Operation 188 'bitconcatenate' 'G_1' <Predicate = (!icmp_ln167)> <Delay = 0.00>
ST_14 : Operation 189 [1/1] (0.52ns)   --->   "%xor_ln190 = xor i32 %A, %B_1" [SM3/src/SM3.c:190]   --->   Operation 189 'xor' 'xor_ln190' <Predicate = (icmp_ln167)> <Delay = 0.52> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 190 [1/1] (1.14ns)   --->   "store i32 %xor_ln190, i32* %intermediateHash_add, align 4" [SM3/src/SM3.c:190]   --->   Operation 190 'store' <Predicate = (icmp_ln167)> <Delay = 1.14> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.14> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_14 : Operation 191 [1/1] (0.52ns)   --->   "%xor_ln191 = xor i32 %B, %Y_assign" [SM3/src/SM3.c:191]   --->   Operation 191 'xor' 'xor_ln191' <Predicate = (icmp_ln167)> <Delay = 0.52> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 192 [1/1] (1.14ns)   --->   "store i32 %xor_ln191, i32* %intermediateHash_add_1, align 4" [SM3/src/SM3.c:191]   --->   Operation 192 'store' <Predicate = (icmp_ln167)> <Delay = 1.14> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.14> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_14 : Operation 193 [1/1] (0.52ns)   --->   "%xor_ln195 = xor i32 %F, %Y_assign_2" [SM3/src/SM3.c:195]   --->   Operation 193 'xor' 'xor_ln195' <Predicate = (icmp_ln167)> <Delay = 0.52> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 194 [1/1] (0.52ns)   --->   "%xor_ln196 = xor i32 %G, %H_1" [SM3/src/SM3.c:196]   --->   Operation 194 'xor' 'xor_ln196' <Predicate = (icmp_ln167)> <Delay = 0.52> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>

State 15 <SV = 9> <Delay = 6.55>
ST_15 : Operation 195 [1/1] (0.00ns)   --->   "%trunc_ln12_4 = trunc i32 %B_1 to i20" [SM3/src/SM3.c:12->SM3/src/SM3.c:172]   --->   Operation 195 'trunc' 'trunc_ln12_4' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 196 [1/1] (0.00ns)   --->   "%lshr_ln12_6 = call i12 @_ssdm_op_PartSelect.i12.i32.i32.i32(i32 %B_1, i32 20, i32 31)" [SM3/src/SM3.c:12->SM3/src/SM3.c:172]   --->   Operation 196 'partselect' 'lshr_ln12_6' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 197 [1/1] (0.00ns)   --->   "%or_ln12_6 = call i32 @_ssdm_op_BitConcatenate.i32.i20.i12(i20 %trunc_ln12_4, i12 %lshr_ln12_6)" [SM3/src/SM3.c:12->SM3/src/SM3.c:172]   --->   Operation 197 'bitconcatenate' 'or_ln12_6' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 198 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln172 = add i32 %select_ln11, %F_1" [SM3/src/SM3.c:172]   --->   Operation 198 'add' 'add_ln172' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.12> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_15 : Operation 199 [1/1] (2.25ns) (root node of TernaryAdder)   --->   "%add_ln172_1 = add i32 %or_ln12_6, %add_ln172" [SM3/src/SM3.c:172]   --->   Operation 199 'add' 'add_ln172_1' <Predicate = true> <Delay = 2.25> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.12> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_15 : Operation 200 [1/1] (0.00ns)   --->   "%trunc_ln12_6 = trunc i32 %add_ln172_1 to i25" [SM3/src/SM3.c:12->SM3/src/SM3.c:172]   --->   Operation 200 'trunc' 'trunc_ln12_6' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 201 [1/1] (0.00ns)   --->   "%lshr_ln12_8 = call i7 @_ssdm_op_PartSelect.i7.i32.i32.i32(i32 %add_ln172_1, i32 25, i32 31)" [SM3/src/SM3.c:12->SM3/src/SM3.c:172]   --->   Operation 201 'partselect' 'lshr_ln12_8' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 202 [1/1] (0.00ns)   --->   "%SS1 = call i32 @_ssdm_op_BitConcatenate.i32.i25.i7(i25 %trunc_ln12_6, i7 %lshr_ln12_8)" [SM3/src/SM3.c:12->SM3/src/SM3.c:172]   --->   Operation 202 'bitconcatenate' 'SS1' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 203 [1/1] (0.52ns)   --->   "%SS2 = xor i32 %or_ln12_6, %SS1" [SM3/src/SM3.c:173]   --->   Operation 203 'xor' 'SS2' <Predicate = true> <Delay = 0.52> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 204 [1/1] (0.00ns) (grouped into LUT with out node add_ln174)   --->   "%xor_ln45 = xor i32 %B_1, %D_1" [SM3/src/SM3.c:45->SM3/src/SM3.c:174]   --->   Operation 204 'xor' 'xor_ln45' <Predicate = (icmp_ln28)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 205 [1/1] (0.00ns) (grouped into LUT with out node add_ln174)   --->   "%xor_ln45_1 = xor i32 %xor_ln45, %Y_assign" [SM3/src/SM3.c:45->SM3/src/SM3.c:174]   --->   Operation 205 'xor' 'xor_ln45_1' <Predicate = (icmp_ln28)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 206 [1/1] (0.00ns) (grouped into LUT with out node or_ln47_1)   --->   "%or_ln47 = or i32 %D_1, %Y_assign" [SM3/src/SM3.c:47->SM3/src/SM3.c:174]   --->   Operation 206 'or' 'or_ln47' <Predicate = (!icmp_ln28)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 207 [1/1] (0.00ns) (grouped into LUT with out node or_ln47_1)   --->   "%and_ln47 = and i32 %or_ln47, %B_1" [SM3/src/SM3.c:47->SM3/src/SM3.c:174]   --->   Operation 207 'and' 'and_ln47' <Predicate = (!icmp_ln28)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 208 [1/1] (0.00ns) (grouped into LUT with out node or_ln47_1)   --->   "%and_ln47_1 = and i32 %D_1, %Y_assign" [SM3/src/SM3.c:47->SM3/src/SM3.c:174]   --->   Operation 208 'and' 'and_ln47_1' <Predicate = (!icmp_ln28)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 209 [1/1] (0.52ns) (out node of the LUT)   --->   "%or_ln47_1 = or i32 %and_ln47, %and_ln47_1" [SM3/src/SM3.c:47->SM3/src/SM3.c:174]   --->   Operation 209 'or' 'or_ln47_1' <Predicate = (!icmp_ln28)> <Delay = 0.52> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 210 [1/1] (0.00ns) (grouped into LUT with out node add_ln174)   --->   "%select_ln28_2 = select i1 %icmp_ln28, i32 %xor_ln45_1, i32 %or_ln47_1" [SM3/src/SM3.c:28->SM3/src/SM3.c:172]   --->   Operation 210 'select' 'select_ln28_2' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.87> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_15 : Operation 211 [1/2] (2.26ns)   --->   "%W_load_17 = load i32* %W_addr_1_16, align 4" [SM3/src/SM3.c:174]   --->   Operation 211 'load' 'W_load_17' <Predicate = true> <Delay = 2.26> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.14> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_15 : Operation 212 [1/1] (1.51ns) (out node of the LUT)   --->   "%add_ln174 = add i32 %select_ln28_2, %W_load_17" [SM3/src/SM3.c:174]   --->   Operation 212 'add' 'add_ln174' <Predicate = true> <Delay = 1.51> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.51> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 213 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln174_1 = add i32 %SS2, %D_0" [SM3/src/SM3.c:174]   --->   Operation 213 'add' 'add_ln174_1' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.12> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_15 : Operation 214 [1/1] (2.25ns) (root node of TernaryAdder)   --->   "%TT1 = add i32 %add_ln174, %add_ln174_1" [SM3/src/SM3.c:174]   --->   Operation 214 'add' 'TT1' <Predicate = true> <Delay = 2.25> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.12> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_15 : Operation 215 [1/2] (2.26ns)   --->   "%W_load_7 = load i32* %W_addr_9, align 4" [SM3/src/SM3.c:175]   --->   Operation 215 'load' 'W_load_7' <Predicate = true> <Delay = 2.26> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.14> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_15 : Operation 216 [1/1] (1.51ns)   --->   "%add_ln175 = add i32 %H_0, %W_load_7" [SM3/src/SM3.c:175]   --->   Operation 216 'add' 'add_ln175' <Predicate = true> <Delay = 1.51> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.51> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 217 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln175_1 = add i32 %SS1, %select_ln28_3" [SM3/src/SM3.c:175]   --->   Operation 217 'add' 'add_ln175_1' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.12> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_15 : Operation 218 [1/1] (2.25ns) (root node of TernaryAdder)   --->   "%TT2 = add i32 %add_ln175, %add_ln175_1" [SM3/src/SM3.c:175]   --->   Operation 218 'add' 'TT2' <Predicate = true> <Delay = 2.25> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.12> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_15 : Operation 219 [1/1] (0.00ns)   --->   "%trunc_ln12_7 = trunc i32 %Y_assign to i23" [SM3/src/SM3.c:12->SM3/src/SM3.c:178]   --->   Operation 219 'trunc' 'trunc_ln12_7' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 220 [1/1] (0.00ns)   --->   "%lshr_ln12_9 = call i9 @_ssdm_op_PartSelect.i9.i32.i32.i32(i32 %Y_assign, i32 23, i32 31)" [SM3/src/SM3.c:12->SM3/src/SM3.c:178]   --->   Operation 220 'partselect' 'lshr_ln12_9' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 221 [1/1] (0.00ns)   --->   "%C_1 = call i32 @_ssdm_op_BitConcatenate.i32.i23.i9(i23 %trunc_ln12_7, i9 %lshr_ln12_9)" [SM3/src/SM3.c:12->SM3/src/SM3.c:178]   --->   Operation 221 'bitconcatenate' 'C_1' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 222 [1/1] (0.00ns) (grouped into LUT with out node E_1)   --->   "%trunc_ln12_9 = trunc i32 %TT2 to i23" [SM3/src/SM3.c:12->SM3/src/SM3.c:75->SM3/src/SM3.c:184]   --->   Operation 222 'trunc' 'trunc_ln12_9' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 223 [1/1] (0.00ns) (grouped into LUT with out node E_1)   --->   "%lshr_ln12_2 = call i9 @_ssdm_op_PartSelect.i9.i32.i32.i32(i32 %TT2, i32 23, i32 31)" [SM3/src/SM3.c:12->SM3/src/SM3.c:75->SM3/src/SM3.c:184]   --->   Operation 223 'partselect' 'lshr_ln12_2' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 224 [1/1] (0.00ns) (grouped into LUT with out node E_1)   --->   "%or_ln12_2 = call i32 @_ssdm_op_BitConcatenate.i32.i23.i9(i23 %trunc_ln12_9, i9 %lshr_ln12_2)" [SM3/src/SM3.c:12->SM3/src/SM3.c:75->SM3/src/SM3.c:184]   --->   Operation 224 'bitconcatenate' 'or_ln12_2' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 225 [1/1] (0.00ns) (grouped into LUT with out node E_1)   --->   "%trunc_ln12_10 = trunc i32 %TT2 to i15" [SM3/src/SM3.c:12->SM3/src/SM3.c:75->SM3/src/SM3.c:184]   --->   Operation 225 'trunc' 'trunc_ln12_10' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 226 [1/1] (0.00ns) (grouped into LUT with out node E_1)   --->   "%lshr_ln12_3 = call i17 @_ssdm_op_PartSelect.i17.i32.i32.i32(i32 %TT2, i32 15, i32 31)" [SM3/src/SM3.c:12->SM3/src/SM3.c:75->SM3/src/SM3.c:184]   --->   Operation 226 'partselect' 'lshr_ln12_3' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 227 [1/1] (0.00ns) (grouped into LUT with out node E_1)   --->   "%or_ln12_3 = call i32 @_ssdm_op_BitConcatenate.i32.i15.i17(i15 %trunc_ln12_10, i17 %lshr_ln12_3)" [SM3/src/SM3.c:12->SM3/src/SM3.c:75->SM3/src/SM3.c:184]   --->   Operation 227 'bitconcatenate' 'or_ln12_3' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 228 [1/1] (0.00ns) (grouped into LUT with out node E_1)   --->   "%xor_ln75 = xor i32 %TT2, %or_ln12_3" [SM3/src/SM3.c:75->SM3/src/SM3.c:184]   --->   Operation 228 'xor' 'xor_ln75' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 229 [1/1] (0.52ns) (out node of the LUT)   --->   "%E_1 = xor i32 %xor_ln75, %or_ln12_2" [SM3/src/SM3.c:75->SM3/src/SM3.c:184]   --->   Operation 229 'xor' 'E_1' <Predicate = true> <Delay = 0.52> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 230 [1/1] (0.00ns)   --->   "br label %6" [SM3/src/SM3.c:167]   --->   Operation 230 'br' <Predicate = true> <Delay = 0.00>

State 16 <SV = 9> <Delay = 1.66>
ST_16 : Operation 231 [1/1] (0.52ns)   --->   "%xor_ln192 = xor i32 %C, %D_1" [SM3/src/SM3.c:192]   --->   Operation 231 'xor' 'xor_ln192' <Predicate = true> <Delay = 0.52> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 232 [1/1] (1.14ns)   --->   "store i32 %xor_ln192, i32* %intermediateHash_add_2, align 4" [SM3/src/SM3.c:192]   --->   Operation 232 'store' <Predicate = true> <Delay = 1.14> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.14> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_16 : Operation 233 [1/1] (0.52ns)   --->   "%xor_ln193 = xor i32 %D, %D_0" [SM3/src/SM3.c:193]   --->   Operation 233 'xor' 'xor_ln193' <Predicate = true> <Delay = 0.52> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 234 [1/1] (1.14ns)   --->   "store i32 %xor_ln193, i32* %intermediateHash_add_3, align 4" [SM3/src/SM3.c:193]   --->   Operation 234 'store' <Predicate = true> <Delay = 1.14> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.14> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_16 : Operation 235 [1/1] (0.52ns)   --->   "%xor_ln194 = xor i32 %E, %F_1" [SM3/src/SM3.c:194]   --->   Operation 235 'xor' 'xor_ln194' <Predicate = true> <Delay = 0.52> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 236 [1/1] (0.52ns)   --->   "%xor_ln197 = xor i32 %H, %H_0" [SM3/src/SM3.c:197]   --->   Operation 236 'xor' 'xor_ln197' <Predicate = true> <Delay = 0.52> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>

State 17 <SV = 10> <Delay = 1.14>
ST_17 : Operation 237 [1/1] (1.14ns)   --->   "store i32 %xor_ln194, i32* %intermediateHash_add_4, align 4" [SM3/src/SM3.c:194]   --->   Operation 237 'store' <Predicate = true> <Delay = 1.14> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.14> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_17 : Operation 238 [1/1] (1.14ns)   --->   "store i32 %xor_ln195, i32* %intermediateHash_add_5, align 4" [SM3/src/SM3.c:195]   --->   Operation 238 'store' <Predicate = true> <Delay = 1.14> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.14> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>

State 18 <SV = 11> <Delay = 1.14>
ST_18 : Operation 239 [1/1] (1.14ns)   --->   "store i32 %xor_ln196, i32* %intermediateHash_add_6, align 4" [SM3/src/SM3.c:196]   --->   Operation 239 'store' <Predicate = true> <Delay = 1.14> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.14> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_18 : Operation 240 [1/1] (1.14ns)   --->   "store i32 %xor_ln197, i32* %intermediateHash_add_7, align 4" [SM3/src/SM3.c:197]   --->   Operation 240 'store' <Predicate = true> <Delay = 1.14> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.14> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_18 : Operation 241 [1/1] (0.00ns)   --->   "ret void" [SM3/src/SM3.c:198]   --->   Operation 241 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 0.85ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i') with incoming values : ('i', SM3/src/SM3.c:121) [8]  (0.85 ns)

 <State 2>: 1.15ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', SM3/src/SM3.c:121) [8]  (0 ns)
	'getelementptr' operation ('messageBlock_addr', SM3/src/SM3.c:123) [15]  (0 ns)
	'load' operation ('messageBlock_load', SM3/src/SM3.c:123) on array 'messageBlock' [16]  (1.15 ns)

 <State 3>: 3.41ns
The critical path consists of the following:
	'load' operation ('messageBlock_load', SM3/src/SM3.c:123) on array 'messageBlock' [16]  (1.15 ns)
	'store' operation ('store_ln123', SM3/src/SM3.c:123) of variable 'messageBlock_load', SM3/src/SM3.c:123 on array 'W', SM3/src/SM3.c:106 [21]  (2.27 ns)

 <State 4>: 3.54ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', SM3/src/SM3.c:134) [26]  (0 ns)
	'add' operation ('add_ln136', SM3/src/SM3.c:136) [31]  (1.27 ns)
	'getelementptr' operation ('W_addr_1', SM3/src/SM3.c:136) [33]  (0 ns)
	'load' operation ('W_load', SM3/src/SM3.c:136) on array 'W', SM3/src/SM3.c:106 [34]  (2.27 ns)

 <State 5>: 3.54ns
The critical path consists of the following:
	'add' operation ('add_ln136_1', SM3/src/SM3.c:136) [35]  (1.27 ns)
	'getelementptr' operation ('W_addr_2', SM3/src/SM3.c:136) [37]  (0 ns)
	'load' operation ('W_load_1', SM3/src/SM3.c:136) on array 'W', SM3/src/SM3.c:106 [38]  (2.27 ns)

 <State 6>: 3.54ns
The critical path consists of the following:
	'add' operation ('add_ln137', SM3/src/SM3.c:137) [54]  (1.27 ns)
	'getelementptr' operation ('W_addr_4', SM3/src/SM3.c:137) [56]  (0 ns)
	'load' operation ('X', SM3/src/SM3.c:137) on array 'W', SM3/src/SM3.c:106 [57]  (2.27 ns)

 <State 7>: 5.05ns
The critical path consists of the following:
	'load' operation ('X', SM3/src/SM3.c:137) on array 'W', SM3/src/SM3.c:106 [57]  (2.27 ns)
	'xor' operation ('xor_ln137_2', SM3/src/SM3.c:137) [66]  (0 ns)
	'xor' operation ('xor_ln137_3', SM3/src/SM3.c:137) [67]  (0 ns)
	'xor' operation ('xor_ln137_1', SM3/src/SM3.c:137) [68]  (0.521 ns)
	'store' operation ('store_ln137', SM3/src/SM3.c:137) of variable 'xor_ln137_1', SM3/src/SM3.c:137 on array 'W', SM3/src/SM3.c:106 [71]  (2.27 ns)

 <State 8>: 3.54ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', SM3/src/SM3.c:148) [77]  (0 ns)
	'add' operation ('add_ln150', SM3/src/SM3.c:150) [86]  (1.27 ns)
	'getelementptr' operation ('W_addr_8', SM3/src/SM3.c:150) [88]  (0 ns)
	'load' operation ('W_load_6', SM3/src/SM3.c:150) on array 'W', SM3/src/SM3.c:106 [89]  (2.27 ns)

 <State 9>: 5.05ns
The critical path consists of the following:
	'load' operation ('W_load_5', SM3/src/SM3.c:150) on array 'W', SM3/src/SM3.c:106 [85]  (2.27 ns)
	'xor' operation ('xor_ln150', SM3/src/SM3.c:150) [90]  (0.521 ns)
	'store' operation ('store_ln150', SM3/src/SM3.c:150) of variable 'xor_ln150', SM3/src/SM3.c:150 on array 'W_', SM3/src/SM3.c:107 [92]  (2.27 ns)

 <State 10>: 1.15ns
The critical path consists of the following:
	'load' operation ('A', SM3/src/SM3.c:157) on array 'intermediateHash' [95]  (1.15 ns)

 <State 11>: 1.15ns
The critical path consists of the following:
	'load' operation ('C', SM3/src/SM3.c:159) on array 'intermediateHash' [99]  (1.15 ns)

 <State 12>: 1.15ns
The critical path consists of the following:
	'load' operation ('E', SM3/src/SM3.c:161) on array 'intermediateHash' [103]  (1.15 ns)

 <State 13>: 1.15ns
The critical path consists of the following:
	'load' operation ('G', SM3/src/SM3.c:163) on array 'intermediateHash' [107]  (1.15 ns)

 <State 14>: 7.2ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', SM3/src/SM3.c:167) [118]  (0 ns)
	'icmp' operation ('icmp_ln28', SM3/src/SM3.c:28->SM3/src/SM3.c:172) [130]  (0.677 ns)
	'select' operation ('select_ln28_1', SM3/src/SM3.c:28->SM3/src/SM3.c:172) [132]  (0.87 ns)
	'shl' operation ('shl_ln14', SM3/src/SM3.c:14->SM3/src/SM3.c:172) [147]  (1.89 ns)
	'select' operation ('select_ln11', SM3/src/SM3.c:11->SM3/src/SM3.c:172) [155]  (1.88 ns)
	blocking operation 1.88 ns on control path)

 <State 15>: 6.55ns
The critical path consists of the following:
	'load' operation ('W_load_7', SM3/src/SM3.c:175) on array 'W', SM3/src/SM3.c:106 [183]  (2.27 ns)
	'add' operation ('add_ln175', SM3/src/SM3.c:175) [184]  (1.51 ns)
	'add' operation ('TT2', SM3/src/SM3.c:175) [186]  (2.25 ns)
	'xor' operation ('xor_ln75', SM3/src/SM3.c:75->SM3/src/SM3.c:184) [199]  (0 ns)
	'xor' operation ('E', SM3/src/SM3.c:75->SM3/src/SM3.c:184) [200]  (0.521 ns)

 <State 16>: 1.67ns
The critical path consists of the following:
	'xor' operation ('xor_ln192', SM3/src/SM3.c:192) [207]  (0.521 ns)
	'store' operation ('store_ln192', SM3/src/SM3.c:192) of variable 'xor_ln192', SM3/src/SM3.c:192 on array 'intermediateHash' [208]  (1.15 ns)

 <State 17>: 1.15ns
The critical path consists of the following:
	'store' operation ('store_ln194', SM3/src/SM3.c:194) of variable 'xor_ln194', SM3/src/SM3.c:194 on array 'intermediateHash' [212]  (1.15 ns)

 <State 18>: 1.15ns
The critical path consists of the following:
	'store' operation ('store_ln196', SM3/src/SM3.c:196) of variable 'xor_ln196', SM3/src/SM3.c:196 on array 'intermediateHash' [216]  (1.15 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
